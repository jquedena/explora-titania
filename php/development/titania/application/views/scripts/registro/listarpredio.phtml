<div id="panelContribuyente" align="center" class="ui-widget ui-widget-content ui-corner-top" style="width: 1000px;margin: 3px;">
    <div class="ui-widget ui-state-default ui-corner-top ui-title">
        <label>Registro de Declaraci&oacute;n Jurada</label>
    </div>
    <table class="ui-table-panelLayout">
        <tr>
            <td style="width: 55px;">C&oacute;digo:</td>
            <td style="width: 75px;font-weight: bold;"><div id="lblCodigo"><?php echo $this->cidpers; ?></div></td>
            <td style="width: 75px; text-align: right; padding-right: 9px;">Nombre:</td>
            <td style="font-weight: bold;"><div id="lblNombre"><?php echo $this->vnombre; ?></div></td>
            <td style="width: 110px;" align="right" rowspan="2">
            	Declaraci&oacute;n Nro.<br/><div style="font-weight: bold;"><?php echo $this->vnrodoc; ?></div>
            	<input type="hidden" name="lblIDResumen" id="lblIDResumen" value="<?php echo $this->mhresum; ?>" />
            </td>
        </tr><tr>
            <td>Direcci&oacute;n:</td>
            <td colspan="3" style="font-weight: bold;"><div id="lblDireccion"><?php echo $this->vdirecc; ?></div></td>
        </tr>
    </table>
</div>
<div id="panelControl" align="right" class="ui-widget ui-widget-content ui-corner-bottom" style="width: 1000px;margin: 3px;">
    <button id="btnRegistrarPredio">Registrar</button>
    <button id="btnEditarPredio">Editar</button>
    <button id="btnCancelarPredio">Cancelar</button>
</div>
<div id="panelListaPredio" align="center" style="width: 99%;margin: 3px;">
    <table id="tblListaPredio"></table>
    <div id="tblListaPredio"></div>
</div>
<div id="container" style="min-width: 400px; height: 250px; margin: 0 auto"></div>
<script type="text/javascript">
    verPredio = function(rowid, iRow, iCol, e) {
        row = $("#tblListaPredio").jqGrid('getRowData', rowid);
        parameters = {
            "mperson": $("#lblCodigo").text(),
            "vnombre": $("#lblNombre").text(),
            "vdirecf": $("#lblDireccion").text(),
            "mpredio": row.mpredio,
            "mhresum": row.mhresum,
            "cperiod": 'max'
        };
        _post = $.post(path + "registro/verpredio", parameters);
        _post.error(postError);
        _post.success(function(request){
            $("#panelRegistro").html(request);
        });
    };
    
    optionPredio = {
        width: 1000,
        height: 125,
        colNames: ['C\u00F3digo',
            'Direcci\u00F3n',
            'Uso',
            'Valor del Predio',
            'Valor Afecto',
            'Adquirido',
            'Nro. de Doc.',
            '% Prop.',
            'mpredio',
            'tnompob',
            'tnomvia',
            'dnumero',
            'ddepart',
            'dmanzan',
            'dnlotes',
            'mhresum'],
        colModel: [{name: 'ccodpre', index:'ccodpre', width: 80}, /* , frozen: true */
            {name: 'tnumero', index:'tnumero', width: 450},
            {name: 'vusogen', index:'vusogen', width: 250},
            {name: 'nvalpre', index:'nvalpre', width: 100, formatter:'currency', align: 'right'},
            {name: 'nvalafe', index:'nvalafe', width: 100, formatter:'currency', align: 'right'},
            {name: 'dfecadq', index:'dfecadq', width: 80, formatter:'date', formatoptions: {srcformat:"Y-m-d", newformat:"d-M-Y"}, align: 'center'},
            {name: 'vnrodoc', index:'vnrodoc', width: 80, align: 'center'},
            {name: 'nporcen', index:'nporcen', width: 60, align: 'right'},
            {name: 'mpredio', index:'mpredio', width: 1, hidden: true},
            {name: 'tnompob', index:'tnompob', width: 1, hidden: true},
            {name: 'tnomvia', index:'tnomvia', width: 1, hidden: true},
            {name: 'dnumero', index:'dnumero', width: 1, hidden: true},
            {name: 'ddepart', index:'ddepart', width: 1, hidden: true},
            {name: 'dmanzan', index:'dmanzan', width: 1, hidden: true},
            {name: 'dnlotes', index:'dnlotes', width: 1, hidden: true},
            {name: 'mhresum', index:'mhresum', width: 1, hidden: true}],
        caption: "&nbsp;&nbsp;&nbsp;Predios Registrados",
        ondblClickRow: verPredio,
        onSelectRow: function(id) {
            row = $(this).getRowData(id);
        }
    };

    bindkeysPredio = {"onEnter": verPredio};
    
    buscarPredio = function() {         
        parameters = {
            "name": "tblListaPredio",
            "procedure": "pl_function.listar_predios",
            "print": "true",
            "parameters": '{' +
            '"p_mhresum":"' + $("#lblIDResumen").val() + '",' +
            '"p_cidpers":"' + $("#lblCodigo").html() + '"' +
            '}'
        };

        procesarProcedimientoJSON("panelListaPredio", "tblListaPredio", optionPredio, parameters, bindkeysPredio);
    };
    
    $(function(){
        $("#btnRegistrarPredio").button({
            icons: {primary:'ui-icon-document'}
        });
        $("#btnEditarPredio").button({
            icons: {primary:'ui-icon-pencil'}
        }).bind('click', function(){
            var rowId = $("#tblListaPredio").jqGrid('getGridParam','selrow');
            verPredio(rowId);
        });
        $("#btnCancelarPredio").button({
            icons: {primary:'ui-icon-arrowreturnthick-1-w'}
        }).bind('click', function(){
            location.href = path + "registro";
        });

        panelPersona({cidpers: $("#lblCodigo").html()});
        buscarPredio();
    });

    // TODO: Corregir
    $(function () {
    var data = [
        0.6965, 0.6956, 0.6956, 0.695, 0.6948, 0.6928, 0.6887, 0.6824, 0.6794, 0.6794,
        0.6803, 0.6855, 0.6824, 0.6791, 0.6783, 0.6785, 0.6785, 0.6797, 0.68, 0.6803,
        0.6805, 0.676, 0.677, 0.677, 0.6736, 0.6726, 0.6764, 0.6821, 0.6831, 0.6842
    ];
    
    var masterChart,
        detailChart;
    
    $(document).ready(function() {
    
    
        // create the master chart
        function createMaster() {
            masterChart = new Highcharts.Chart({
                chart: {
                    renderTo: 'master-container',
                    reflow: false,
                    borderWidth: 0,
                    backgroundColor: null,
                    marginLeft: 50,
                    marginRight: 20,
                    zoomType: 'x',
                    events: {
    
                        // listen to the selection event on the master chart to update the
                        // extremes of the detail chart
                        selection: function(event) {
                            var extremesObject = event.xAxis[0],
                                min = extremesObject.min,
                                max = extremesObject.max,
                                detailData = [],
                                xAxis = this.xAxis[0];
    
                            // reverse engineer the last part of the data
                            jQuery.each(this.series[0].data, function(i, point) {
                                if (point.x > min && point.x < max) {
                                    detailData.push({
                                        x: point.x,
                                        y: point.y
                                    });
                                }
                            });
    
                            // move the plot bands to reflect the new detail span
                            xAxis.removePlotBand('mask-before');
                            xAxis.addPlotBand({
                                id: 'mask-before',
                                from: Date.UTC(2006, 0, 1),
                                to: min,
                                color: 'rgba(0, 0, 0, 0.2)'
                            });
    
                            xAxis.removePlotBand('mask-after');
                            xAxis.addPlotBand({
                                id: 'mask-after',
                                from: max,
                                to: Date.UTC(2008, 11, 31),
                                color: 'rgba(0, 0, 0, 0.2)'
                            });
    
    
                            detailChart.series[0].setData(detailData);
    
                            return false;
                        }
                    }
                },
                title: {
                    text: null
                },
                xAxis: {
                    type: 'datetime',
                    showLastTickLabel: true,
                    maxZoom: 14 * 24 * 3600000, // fourteen days
                    plotBands: [{
                        id: 'mask-before',
                        from: Date.UTC(2006, 0, 1),
                        to: Date.UTC(2008, 7, 1),
                        color: 'rgba(0, 0, 0, 0.2)'
                    }],
                    title: {
                        text: null
                    }
                },
                yAxis: {
                    gridLineWidth: 0,
                    labels: {
                        enabled: false
                    },
                    title: {
                        text: null
                    },
                    min: 0.6,
                    showFirstLabel: false
                },
                tooltip: {
                    formatter: function() {
                        return false;
                    }
                },
                legend: {
                    enabled: false
                },
                credits: {
                    enabled: false
                },
                plotOptions: {
                    series: {
                        fillColor: {
                            linearGradient: [0, 0, 0, 70],
                            stops: [
                                [0, '#4572A7'],
                                [1, 'rgba(0,0,0,0)']
                            ]
                        },
                        lineWidth: 1,
                        marker: {
                            enabled: false
                        },
                        shadow: false,
                        states: {
                            hover: {
                                lineWidth: 1
                            }
                        },
                        enableMouseTracking: false
                    }
                },
    
                series: [{
                    type: 'area',
                    name: 'USD to EUR',
                    pointInterval: 24 * 3600 * 1000,
                    pointStart: Date.UTC(2006, 0, 01),
                    data: data
                }],
    
                exporting: {
                    enabled: false
                }
    
            }, function(masterChart) {
                createDetail(masterChart)
            });
        }
    
        // create the detail chart
        function createDetail(masterChart) {
    
            // prepare the detail chart
            var detailData = [],
                detailStart = Date.UTC(2008, 7, 1);
    
            jQuery.each(masterChart.series[0].data, function(i, point) {
                if (point.x >= detailStart) {
                    detailData.push(point.y);
                }
            });
    
            // create a detail chart referenced by a global variable
            detailChart = new Highcharts.Chart({
                chart: {
                    marginBottom: 120,
                    renderTo: 'detail-container',
                    reflow: false,
                    marginLeft: 50,
                    marginRight: 20,
                    style: {
                        position: 'absolute'
                    }
                },
                credits: {
                    enabled: false
                },
                title: {
                    text: 'Historical USD to EUR Exchange Rate'
                },
                subtitle: {
                    text: 'Select an area by dragging across the lower chart'
                },
                xAxis: {
                    type: 'datetime'
                },
                yAxis: {
                    title: {
                        text: null
                    },
                    maxZoom: 0.1
                },
                tooltip: {
                    formatter: function() {
                        var point = this.points[0];
                        return '<b>'+ point.series.name +'</b><br/>'+
                            Highcharts.dateFormat('%A %B %e %Y', this.x) + ':<br/>'+
                            '1 USD = '+ Highcharts.numberFormat(point.y, 2) +' EUR';
                    },
                    shared: true
                },
                legend: {
                    enabled: false
                },
                plotOptions: {
                    series: {
                        marker: {
                            enabled: false,
                            states: {
                                hover: {
                                    enabled: true,
                                    radius: 3
                                }
                            }
                        }
                    }
                },
                series: [{
                    name: 'USD to EUR',
                    pointStart: detailStart,
                    pointInterval: 24 * 3600 * 1000,
                    data: detailData
                }],
    
                exporting: {
                    enabled: false
                }
    
            });
        }
    
        // make the container smaller and add a second container for the master chart
        var $container = $('#container')
            .css('position', 'relative');
    
        var $detailContainer = $('<div id="detail-container">')
            .appendTo($container);
    
        var $masterContainer = $('<div id="master-container">')
            .css({ position: 'absolute', top: 300, height: 80, width: '100%' })
            .appendTo($container);
    
        // create master and in its callback, create the detail chart
        createMaster();
    });
    
});
</script>