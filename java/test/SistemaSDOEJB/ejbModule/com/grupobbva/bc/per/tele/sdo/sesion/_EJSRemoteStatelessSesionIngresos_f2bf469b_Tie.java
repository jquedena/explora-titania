// Tie class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.grupobbva.bc.per.tele.sdo.sesion;

import java.lang.Object;
import java.lang.String;
import java.lang.Throwable;
import java.rmi.Remote;
import java.util.ArrayList;
import java.util.Vector;
import javax.ejb.EJBHome;
import javax.ejb.EJBObject;
import javax.ejb.Handle;
import javax.ejb.RemoveException;
import javax.rmi.CORBA.Tie;
import javax.rmi.CORBA.Util;
import org.omg.CORBA.BAD_OPERATION;
import org.omg.CORBA.ORB;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.Delegate;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.ResponseHandler;
import org.omg.CORBA.portable.UnknownException;

public class _EJSRemoteStatelessSesionIngresos_f2bf469b_Tie extends org.omg.CORBA_2_3.portable.ObjectImpl implements Tie {
    
    private EJSRemoteStatelessSesionIngresos_f2bf469b target = null;
    private ORB orb = null;
    
    private static final String[] _type_ids = {
        "RMI:com.grupobbva.bc.per.tele.sdo.sesion.SesionIngresos:0000000000000000", 
        "RMI:javax.ejb.EJBObject:0000000000000000", 
        "RMI:com.ibm.websphere.csi.CSIServant:0000000000000000", 
        "RMI:com.ibm.websphere.csi.TransactionalObject:0000000000000000"
    };
    
    public void setTarget(Remote target) {
        this.target = (EJSRemoteStatelessSesionIngresos_f2bf469b) target;
    }
    
    public Remote getTarget() {
        return target;
    }
    
    public org.omg.CORBA.Object thisObject() {
        return this;
    }
    
    public void deactivate() {
        if (orb != null) {
            orb.disconnect(this);
            _set_delegate(null);
        }
    }
    
    public ORB orb() {
        return _orb();
    }
    
    public void orb(ORB orb) {
        orb.connect(this);
    }
    
    public void _set_delegate(Delegate del) {
        super._set_delegate(del);
        if (del != null)
            orb = _orb();
        else
            orb = null;
    }
    
    public String[] _ids() { 
        return _type_ids;
    }
    
    public OutputStream _invoke(String method, InputStream _in, ResponseHandler reply) throws SystemException {
        try {
            org.omg.CORBA_2_3.portable.InputStream in = 
                (org.omg.CORBA_2_3.portable.InputStream) _in;
            switch (method.length()) {
                case 6: 
                    if (method.equals("remove")) {
                        return remove(in, reply);
                    }
                case 11: 
                    if (method.equals("_get_handle")) {
                        return _get_handle(in, reply);
                    } else if (method.equals("isIdentical")) {
                        return isIdentical(in, reply);
                    }
                case 12: 
                    if (method.equals("nuevoIngreso")) {
                        return nuevoIngreso(in, reply);
                    } else if (method.equals("_get_EJBHome")) {
                        return _get_EJBHome(in, reply);
                    }
                case 13: 
                    if (method.equals("busAllIngreso")) {
                        return busAllIngreso(in, reply);
                    }
                case 14: 
                    if (method.equals("busIngresoxDIA")) {
                        return busIngresoxDIA(in, reply);
                    }
                case 15: 
                    if (method.equals("_get_primaryKey")) {
                        return _get_primaryKey(in, reply);
                    } else if (method.equals("reportexOficina")) {
                        return reportexOficina(in, reply);
                    } else if (method.equals("reportexUsuario")) {
                        return reportexUsuario(in, reply);
                    }
                case 16: 
                    if (method.equals("busID_IngresoMax")) {
                        return busID_IngresoMax(in, reply);
                    }
                case 17: 
                    if (method.equals("actualizarIngreso")) {
                        return actualizarIngreso(in, reply);
                    } else if (method.equals("existeIngresoForm")) {
                        return existeIngresoForm(in, reply);
                    }
                case 18: 
                    if (method.equals("busIngresoxUsuario")) {
                        return busIngresoxUsuario(in, reply);
                    } else if (method.equals("busIngresoxOficina")) {
                        return busIngresoxOficina(in, reply);
                    } else if (method.equals("reportexTerritorio")) {
                        return reportexTerritorio(in, reply);
                    } else if (method.equals("listadoIngresoxDia")) {
                        return listadoIngresoxDia(in, reply);
                    }
                case 19: 
                    if (method.equals("insertarIngresoForm")) {
                        return insertarIngresoForm(in, reply);
                    }
                case 20: 
                    if (method.equals("listarDiasMesesxAnio")) {
                        return listarDiasMesesxAnio(in, reply);
                    } else if (method.equals("reportexOficinaxAnio")) {
                        return reportexOficinaxAnio(in, reply);
                    } else if (method.equals("reportexUsuarioxAnio")) {
                        return reportexUsuarioxAnio(in, reply);
                    }
                case 21: 
                    if (method.equals("busIngresoxTerritorio")) {
                        return busIngresoxTerritorio(in, reply);
                    }
                case 22: 
                    if (method.equals("busIngresoxOFICINAxMes")) {
                        return busIngresoxOFICINAxMes(in, reply);
                    } else if (method.equals("busIngresoxUSUARIOxMes")) {
                        return busIngresoxUSUARIOxMes(in, reply);
                    }
                case 23: 
                    if (method.equals("busIngresoxOFICINAxAnho")) {
                        return busIngresoxOFICINAxAnho(in, reply);
                    } else if (method.equals("busIngresoxUSUARIOxAnho")) {
                        return busIngresoxUSUARIOxAnho(in, reply);
                    } else if (method.equals("reportexTerritorioxAnio")) {
                        return reportexTerritorioxAnio(in, reply);
                    }
                case 25: 
                    if (method.equals("busIngresoxTERRITORIOxMes")) {
                        return busIngresoxTERRITORIOxMes(in, reply);
                    }
                case 26: 
                    if (method.equals("busIngresoxTERRITORIOxAnho")) {
                        return busIngresoxTERRITORIOxAnho(in, reply);
                    }
                case 32: 
                    if (method.equals("actualizarIngresoFormEditUsuario")) {
                        return actualizarIngresoFormEditUsuario(in, reply);
                    }
            }
            throw new BAD_OPERATION();
        } catch (SystemException ex) {
            throw ex;
        } catch (Throwable ex) {
            throw new UnknownException(ex);
        }
    }
    
    private OutputStream _get_EJBHome(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        EJBHome result = target.getEJBHome();
        OutputStream out = reply.createReply();
        Util.writeRemoteObject(out,result);
        return out;
    }
    
    private OutputStream _get_primaryKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Object result = target.getPrimaryKey();
        OutputStream out = reply.createReply();
        Util.writeAny(out,result);
        return out;
    }
    
    private OutputStream remove(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        try {
            target.remove();
        } catch (RemoveException ex) {
            String id = "IDL:javax/ejb/RemoveEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,RemoveException.class);
            return out;
        }
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_handle(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Handle result = target.getHandle();
        OutputStream out = reply.createReply();
        Util.writeAbstractObject(out,result);
        return out;
    }
    
    private OutputStream isIdentical(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        EJBObject arg0 = (EJBObject) in.read_Object(EJBObject.class);
        boolean result = target.isIdentical(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream busAllIngreso(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.busAllIngreso(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busID_IngresoMax(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int result = target.busID_IngresoMax();
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream busIngresoxDIA(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxDIA(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busIngresoxOFICINAxAnho(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxOFICINAxAnho(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busIngresoxOFICINAxMes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxOFICINAxMes(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busIngresoxUSUARIOxMes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxUSUARIOxMes(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busIngresoxUSUARIOxAnho(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxUSUARIOxAnho(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busIngresoxTERRITORIOxMes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxTERRITORIOxMes(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busIngresoxTERRITORIOxAnho(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxTERRITORIOxAnho(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busIngresoxUsuario(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxUsuario(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream nuevoIngreso(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        int result = target.nuevoIngreso(arg0, arg1, arg2, arg3, arg4, arg5);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream actualizarIngreso(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        int arg1 = in.read_long();
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        target.actualizarIngreso(arg0, arg1, arg2, arg3);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream busIngresoxOficina(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxOficina(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busIngresoxTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxTerritorio(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream actualizarIngresoFormEditUsuario(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        long arg0 = in.read_longlong();
        target.actualizarIngresoFormEditUsuario(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream existeIngresoForm(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        int arg1 = in.read_long();
        int arg2 = in.read_long();
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        long result = target.existeIngresoForm(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        OutputStream out = reply.createReply();
        out.write_longlong(result);
        return out;
    }
    
    private OutputStream insertarIngresoForm(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        int arg1 = in.read_long();
        int arg2 = in.read_long();
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        target.insertarIngresoForm(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream listarDiasMesesxAnio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        ArrayList result = target.listarDiasMesesxAnio(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream reportexOficina(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        int arg1 = in.read_long();
        int arg2 = in.read_long();
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.reportexOficina(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream reportexOficinaxAnio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.reportexOficinaxAnio(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream reportexTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        int arg1 = in.read_long();
        int arg2 = in.read_long();
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.reportexTerritorio(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream reportexTerritorioxAnio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.reportexTerritorioxAnio(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream reportexUsuario(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        int arg1 = in.read_long();
        int arg2 = in.read_long();
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.reportexUsuario(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream reportexUsuarioxAnio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.reportexUsuarioxAnio(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream listadoIngresoxDia(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        int result = target.listadoIngresoxDia(arg0, arg1);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
}
