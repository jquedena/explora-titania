// Tie class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.grupobbva.bc.per.tele.sdo.sesionws;

import com.grupobbva.bc.per.tele.sdo.serializable.Accion;
import com.grupobbva.bc.per.tele.sdo.serializable.Campanias;
import com.grupobbva.bc.per.tele.sdo.serializable.Epigrafe;
import com.grupobbva.bc.per.tele.sdo.serializable.Equivalencia;
import com.grupobbva.bc.per.tele.sdo.serializable.Firmas;
import com.grupobbva.bc.per.tele.sdo.serializable.MaestroPlan;
import com.grupobbva.bc.per.tele.sdo.serializable.Menu;
import com.grupobbva.bc.per.tele.sdo.serializable.MetasGestor;
import com.grupobbva.bc.per.tele.sdo.serializable.Multitabla;
import com.grupobbva.bc.per.tele.sdo.serializable.Oficina;
import com.grupobbva.bc.per.tele.sdo.serializable.OficinaHija;
import com.grupobbva.bc.per.tele.sdo.serializable.Parametro;
import com.grupobbva.bc.per.tele.sdo.serializable.Perfil;
import com.grupobbva.bc.per.tele.sdo.serializable.PermisoPerfil;
import com.grupobbva.bc.per.tele.sdo.serializable.Plan;
import com.grupobbva.bc.per.tele.sdo.serializable.ProgSeguimiento;
import com.grupobbva.bc.per.tele.sdo.serializable.Territorio;
import java.lang.Double;
import java.lang.Object;
import java.lang.String;
import java.lang.Throwable;
import java.math.BigDecimal;
import java.rmi.Remote;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Vector;
import javax.ejb.EJBHome;
import javax.ejb.EJBObject;
import javax.ejb.Handle;
import javax.ejb.RemoveException;
import javax.rmi.CORBA.Tie;
import javax.rmi.CORBA.Util;
import org.omg.CORBA.BAD_OPERATION;
import org.omg.CORBA.ORB;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.Delegate;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.ResponseHandler;
import org.omg.CORBA.portable.UnknownException;

public class _EJSRemoteStatelessSesionWS_2449ed74_Tie extends org.omg.CORBA_2_3.portable.ObjectImpl implements Tie {
    
    private EJSRemoteStatelessSesionWS_2449ed74 target = null;
    private ORB orb = null;
    
    private static final String[] _type_ids = {
        "RMI:com.grupobbva.bc.per.tele.sdo.sesionws.SesionWS:0000000000000000", 
        "RMI:javax.ejb.EJBObject:0000000000000000", 
        "RMI:com.ibm.websphere.csi.CSIServant:0000000000000000", 
        "RMI:com.ibm.websphere.csi.TransactionalObject:0000000000000000"
    };
    
    public void setTarget(Remote target) {
        this.target = (EJSRemoteStatelessSesionWS_2449ed74) target;
    }
    
    public Remote getTarget() {
        return target;
    }
    
    public org.omg.CORBA.Object thisObject() {
        return this;
    }
    
    public void deactivate() {
        if (orb != null) {
            orb.disconnect(this);
            _set_delegate(null);
        }
    }
    
    public ORB orb() {
        return _orb();
    }
    
    public void orb(ORB orb) {
        orb.connect(this);
    }
    
    public void _set_delegate(Delegate del) {
        super._set_delegate(del);
        if (del != null)
            orb = _orb();
        else
            orb = null;
    }
    
    public String[] _ids() { 
        return _type_ids;
    }
    
    public OutputStream _invoke(String method, InputStream _in, ResponseHandler reply) throws SystemException {
        try {
            org.omg.CORBA_2_3.portable.InputStream in = 
                (org.omg.CORBA_2_3.portable.InputStream) _in;
            switch (method.hashCode()) {
                case -2140698252: 
                    if (method.equals("xInsertarTMaestroPlanes")) {
                        return xInsertarTMaestroPlanes(in, reply);
                    }
                case -2140594192: 
                    if (method.equals("nuevaAccion")) {
                        return nuevaAccion(in, reply);
                    }
                case -2128148660: 
                    if (method.equals("xInsertarTParametros")) {
                        return xInsertarTParametros(in, reply);
                    }
                case -2123926735: 
                    if (method.equals("xBusAllTablaEquivalencias")) {
                        return xBusAllTablaEquivalencias(in, reply);
                    }
                case -2113695281: 
                    if (method.equals("nuevaCampania")) {
                        return nuevaCampania(in, reply);
                    }
                case -2105363751: 
                    if (method.equals("listaReportePPG")) {
                        return listaReportePPG(in, reply);
                    }
                case -2062840584: 
                    if (method.equals("listaReportePlanificacion")) {
                        return listaReportePlanificacion(in, reply);
                    }
                case -2061430977: 
                    if (method.equals("actualizarIngresoFormEditUsuario")) {
                        return actualizarIngresoFormEditUsuario(in, reply);
                    }
                case -2024493700: 
                    if (method.equals("editarTerritoriosDeOficinas")) {
                        return editarTerritoriosDeOficinas(in, reply);
                    }
                case -1977529167: 
                    if (method.equals("findPlanAnual")) {
                        return findPlanAnual(in, reply);
                    }
                case -1955220407: 
                    if (method.equals("updateElemMultitabla")) {
                        return updateElemMultitabla(in, reply);
                    }
                case -1880070680: 
                    if (method.equals("eliminarAccion")) {
                        return eliminarAccion(in, reply);
                    }
                case -1855199163: 
                    if (method.equals("busIngresoxUSUARIOxAnho")) {
                        return busIngresoxUSUARIOxAnho(in, reply);
                    }
                case -1811412336: 
                    if (method.equals("metasGestor")) {
                        return metasGestor(in, reply);
                    }
                case -1790231011: 
                    if (method.equals("metasOficina")) {
                        return metasOficina(in, reply);
                    }
                case -1783193160: 
                    if (method.equals("actualizarSeguimiento1")) {
                        return actualizarSeguimiento1(in, reply);
                    }
                case -1783193159: 
                    if (method.equals("actualizarSeguimiento2")) {
                        return actualizarSeguimiento2(in, reply);
                    }
                case -1776188665: 
                    if (method.equals("reportexOficinaxAnio")) {
                        return reportexOficinaxAnio(in, reply);
                    }
                case -1767244507: 
                    if (method.equals("distribuirGOF")) {
                        return distribuirGOF(in, reply);
                    }
                case -1757200794: 
                    if (method.equals("buscarEstadoFlag")) {
                        return buscarEstadoFlag(in, reply);
                    }
                case -1747427716: 
                    if (method.equals("deleteEquivalencia")) {
                        return deleteEquivalencia(in, reply);
                    }
                case -1737471576: 
                    if (method.equals("actualizarPorcentajeEpigrafe")) {
                        return actualizarPorcentajeEpigrafe(in, reply);
                    }
                case -1719645701: 
                    if (method.equals("consultarPLanesAccion")) {
                        return consultarPLanesAccion(in, reply);
                    }
                case -1715926570: 
                    if (method.equals("deletePermisoPerfil")) {
                        return deletePermisoPerfil(in, reply);
                    }
                case -1674251002: 
                    if (method.equals("crearProgTerritorio")) {
                        return crearProgTerritorio(in, reply);
                    }
                case -1671816121: 
                    if (method.equals("xInsertarTAcciones")) {
                        return xInsertarTAcciones(in, reply);
                    }
                case -1668989897: 
                    if (method.equals("busID_IngresoMax")) {
                        return busID_IngresoMax(in, reply);
                    }
                case -1635720411: 
                    if (method.equals("xBusAllTablaOficinaAntiguo")) {
                        return xBusAllTablaOficinaAntiguo(in, reply);
                    }
                case -1624209342: 
                    if (method.equals("eliminarOficinaHija")) {
                        return eliminarOficinaHija(in, reply);
                    }
                case -1623947628: 
                    if (method.equals("findAllOficinaByCodTerri_MOD1")) {
                        return findAllOficinaByCodTerri_MOD1(in, reply);
                    }
                case -1623947627: 
                    if (method.equals("findAllOficinaByCodTerri_MOD2")) {
                        return findAllOficinaByCodTerri_MOD2(in, reply);
                    }
                case -1568173567: 
                    if (method.equals("findParametroAll")) {
                        return findParametroAll(in, reply);
                    }
                case -1550521068: 
                    if (method.equals("_get_EJBHome")) {
                        return _get_EJBHome(in, reply);
                    }
                case -1498536406: 
                    if (method.equals("findOficinaHija")) {
                        return findOficinaHija(in, reply);
                    }
                case -1464346760: 
                    if (method.equals("updatePermisoPerfil")) {
                        return updatePermisoPerfil(in, reply);
                    }
                case -1462217574: 
                    if (method.equals("updateEquivalencia")) {
                        return updateEquivalencia(in, reply);
                    }
                case -1450542408: 
                    if (method.equals("findProgTerritorio")) {
                        return findProgTerritorio(in, reply);
                    }
                case -1449923114: 
                    if (method.equals("actualizarGestoresDistribuidosLDAP")) {
                        return actualizarGestoresDistribuidosLDAP(in, reply);
                    }
                case -1413140481: 
                    if (method.equals("findEpigrafesinPlanes")) {
                        return findEpigrafesinPlanes(in, reply);
                    }
                case -1412154379: 
                    if (method.equals("busGestorxOficina")) {
                        return busGestorxOficina(in, reply);
                    }
                case -1410087560: 
                    if (method.equals("reportePGOResumen2")) {
                        return reportePGOResumen2(in, reply);
                    }
                case -1405184949: 
                    if (method.equals("xBusAllTablaPerfiles")) {
                        return xBusAllTablaPerfiles(in, reply);
                    }
                case -1403103539: 
                    if (method.equals("busTerritorioxRegistroLDAP")) {
                        return busTerritorioxRegistroLDAP(in, reply);
                    }
                case -1388621186: 
                    if (method.equals("busAllAnhos")) {
                        return busAllAnhos(in, reply);
                    }
                case -1384920032: 
                    if (method.equals("busOficinaCodyNom")) {
                        return busOficinaCodyNom(in, reply);
                    }
                case -1351066570: 
                    if (method.equals("edicionAccion")) {
                        return edicionAccion(in, reply);
                    }
                case -1341839892: 
                    if (method.equals("reportexTerritorio")) {
                        return reportexTerritorio(in, reply);
                    }
                case -1323710836: 
                    if (method.equals("consultarCampaniasDetalles")) {
                        return consultarCampaniasDetalles(in, reply);
                    }
                case -1306862714: 
                    if (method.equals("busAllTerritorio")) {
                        return busAllTerritorio(in, reply);
                    }
                case -1290068751: 
                    if (method.equals("findAllParametro")) {
                        return findAllParametro(in, reply);
                    }
                case -1276135182: 
                    if (method.equals("xDameTerritorio")) {
                        return xDameTerritorio(in, reply);
                    }
                case -1249746334: 
                    if (method.equals("exportarTablasTXT")) {
                        return exportarTablasTXT(in, reply);
                    }
                case -1221600475: 
                    if (method.equals("mostrarEsfuerzoCampania")) {
                        return mostrarEsfuerzoCampania(in, reply);
                    }
                case -1185557499: 
                    if (method.equals("pggEsfuerzoAdicional2__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__com_grupobbva_bc_per_tele_sdo_serializable_ProgSeguimiento")) {
                        return pggEsfuerzoAdicional2__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__com_grupobbva_bc_per_tele_sdo_serializable_ProgSeguimiento(in, reply);
                    }
                case -1181578098: 
                    if (method.equals("listaCampaniaDetalle")) {
                        return listaCampaniaDetalle(in, reply);
                    }
                case -1175136058: 
                    if (method.equals("testearBD")) {
                        return testearBD(in, reply);
                    }
                case -1148795622: 
                    if (method.equals("findAllEquivalencias")) {
                        return findAllEquivalencias(in, reply);
                    }
                case -1107567228: 
                    if (method.equals("pggEsfuerzoAdicional1__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__com_grupobbva_bc_per_tele_sdo_serializable_ProgSeguimiento")) {
                        return pggEsfuerzoAdicional1__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__com_grupobbva_bc_per_tele_sdo_serializable_ProgSeguimiento(in, reply);
                    }
                case -1100368037: 
                    if (method.equals("findCantidadPersonal")) {
                        return findCantidadPersonal(in, reply);
                    }
                case -1087595497: 
                    if (method.equals("findGestorByCodMonthYear")) {
                        return findGestorByCodMonthYear(in, reply);
                    }
                case -1085443153: 
                    if (method.equals("busIngresoxTERRITORIOxMes")) {
                        return busIngresoxTERRITORIOxMes(in, reply);
                    }
                case -1082496239: 
                    if (method.equals("borrarMaestro")) {
                        return borrarMaestro(in, reply);
                    }
                case -1064664470: 
                    if (method.equals("xInsertarTEpigrafes")) {
                        return xInsertarTEpigrafes(in, reply);
                    }
                case -1054417932: 
                    if (method.equals("createMetasGestor")) {
                        return createMetasGestor(in, reply);
                    }
                case -1039985675: 
                    if (method.equals("updatePerfil")) {
                        return updatePerfil(in, reply);
                    }
                case -1015318022: 
                    if (method.equals("reportePGOResumen")) {
                        return reportePGOResumen(in, reply);
                    }
                case -1011244123: 
                    if (method.equals("_get_primaryKey")) {
                        return _get_primaryKey(in, reply);
                    }
                case -996545595: 
                    if (method.equals("findEquivalenciaByCodCargo")) {
                        return findEquivalenciaByCodCargo(in, reply);
                    }
                case -979011599: 
                    if (method.equals("busCampaniaDetalle")) {
                        return busCampaniaDetalle(in, reply);
                    }
                case -966882511: 
                    if (method.equals("findEpigrafeInf")) {
                        return findEpigrafeInf(in, reply);
                    }
                case -951751242: 
                    if (method.equals("listaReporteSeguimiento1")) {
                        return listaReporteSeguimiento1(in, reply);
                    }
                case -951751241: 
                    if (method.equals("listaReporteSeguimiento2")) {
                        return listaReporteSeguimiento2(in, reply);
                    }
                case -934610812: 
                    if (method.equals("remove")) {
                        return remove(in, reply);
                    }
                case -913943017: 
                    if (method.equals("pggEsfuerzoAdicional2__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue")) {
                        return pggEsfuerzoAdicional2__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue(in, reply);
                    }
                case -874866229: 
                    if (method.equals("findByMultiForPresup")) {
                        return findByMultiForPresup(in, reply);
                    }
                case -862570082: 
                    if (method.equals("consultarPlanesAccionesPPG")) {
                        return consultarPlanesAccionesPPG(in, reply);
                    }
                case -859787433: 
                    if (method.equals("deletePerfil")) {
                        return deletePerfil(in, reply);
                    }
                case -858703417: 
                    if (method.equals("eliminarCampania")) {
                        return eliminarCampania(in, reply);
                    }
                case -822716562: 
                    if (method.equals("findProgramacionSeguimiento")) {
                        return findProgramacionSeguimiento(in, reply);
                    }
                case -778537116: 
                    if (method.equals("xBusAllTablaCampanhasAntiguo")) {
                        return xBusAllTablaCampanhasAntiguo(in, reply);
                    }
                case -764591992: 
                    if (method.equals("busIngresoxOFICINAxAnho")) {
                        return busIngresoxOFICINAxAnho(in, reply);
                    }
                case -679722741: 
                    if (method.equals("findByID")) {
                        return findByID(in, reply);
                    }
                case -628967771: 
                    if (method.equals("eliminarMetaGestoresHijas")) {
                        return eliminarMetaGestoresHijas(in, reply);
                    }
                case -587798971: 
                    if (method.equals("findxCodPerfil")) {
                        return findxCodPerfil(in, reply);
                    }
                case -563038228: 
                    if (method.equals("findFirmByAnoMesCgesItem")) {
                        return findFirmByAnoMesCgesItem(in, reply);
                    }
                case -545339166: 
                    if (method.equals("xInsertarTFirmas")) {
                        return xInsertarTFirmas(in, reply);
                    }
                case -537362788: 
                    if (method.equals("crearOficinaHija")) {
                        return crearOficinaHija(in, reply);
                    }
                case -535999053: 
                    if (method.equals("findOficinaAndTerri")) {
                        return findOficinaAndTerri(in, reply);
                    }
                case -485139611: 
                    if (method.equals("pggSeguimiento2__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue")) {
                        return pggSeguimiento2__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue(in, reply);
                    }
                case -483890567: 
                    if (method.equals("findMetGestorByPrimaryKey")) {
                        return findMetGestorByPrimaryKey(in, reply);
                    }
                case -426978522: 
                    if (method.equals("eliminarTerritorio")) {
                        return eliminarTerritorio(in, reply);
                    }
                case -422535847: 
                    if (method.equals("xInsertarTOficina")) {
                        return xInsertarTOficina(in, reply);
                    }
                case -422276415: 
                    if (method.equals("mostrarEditarCampania")) {
                        return mostrarEditarCampania(in, reply);
                    }
                case -401070299: 
                    if (method.equals("busAnhoMaxAcciones")) {
                        return busAnhoMaxAcciones(in, reply);
                    }
                case -400845858: 
                    if (method.equals("xInsertarTMetasGestor")) {
                        return xInsertarTMetasGestor(in, reply);
                    }
                case -385023978: 
                    if (method.equals("pggEsfuerzoAdicional1__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue")) {
                        return pggEsfuerzoAdicional1__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue(in, reply);
                    }
                case -347290988: 
                    if (method.equals("findListaByCodOficina")) {
                        return findListaByCodOficina(in, reply);
                    }
                case -337958865: 
                    if (method.equals("modificarTerritorio")) {
                        return modificarTerritorio(in, reply);
                    }
                case -309256075: 
                    if (method.equals("busIngresoxDIA")) {
                        return busIngresoxDIA(in, reply);
                    }
                case -296143416: 
                    if (method.equals("updateMenu")) {
                        return updateMenu(in, reply);
                    }
                case -296047726: 
                    if (method.equals("updatePlan")) {
                        return updatePlan(in, reply);
                    }
                case -288432876: 
                    if (method.equals("findAllPerfil")) {
                        return findAllPerfil(in, reply);
                    }
                case -282880651: 
                    if (method.equals("xBusAllTablaMaestroPlanes")) {
                        return xBusAllTablaMaestroPlanes(in, reply);
                    }
                case -256782455: 
                    if (method.equals("xInsertarTPlanes")) {
                        return xInsertarTPlanes(in, reply);
                    }
                case -242121942: 
                    if (method.equals("reportePGO1")) {
                        return reportePGO1(in, reply);
                    }
                case -234070663: 
                    if (method.equals("findAllPermisoPerfil")) {
                        return findAllPermisoPerfil(in, reply);
                    }
                case -198381206: 
                    if (method.equals("busIngresoxUSUARIOxMes")) {
                        return busIngresoxUSUARIOxMes(in, reply);
                    }
                case -180433926: 
                    if (method.equals("nuevoIngreso")) {
                        return nuevoIngreso(in, reply);
                    }
                case -174613536: 
                    if (method.equals("codigoAccion")) {
                        return codigoAccion(in, reply);
                    }
                case -169124506: 
                    if (method.equals("busEpigrafeAcciones2")) {
                        return busEpigrafeAcciones2(in, reply);
                    }
                case -161496672: 
                    if (method.equals("eliminarProgTerritorio")) {
                        return eliminarProgTerritorio(in, reply);
                    }
                case -114811472: 
                    if (method.equals("eliminarCampaniaDetalle")) {
                        return eliminarCampaniaDetalle(in, reply);
                    }
                case -99916896: 
                    if (method.equals("buscarUsuariosLDAP")) {
                        return buscarUsuariosLDAP(in, reply);
                    }
                case -81910183: 
                    if (method.equals("insertUpdateMesesReferencia")) {
                        return insertUpdateMesesReferencia(in, reply);
                    }
                case -77006823: 
                    if (method.equals("xBusAllTablaAccionesAntiguo")) {
                        return xBusAllTablaAccionesAntiguo(in, reply);
                    }
                case -76367193: 
                    if (method.equals("findAllMenu")) {
                        return findAllMenu(in, reply);
                    }
                case -76005467: 
                    if (method.equals("busTerritorioxCod")) {
                        return busTerritorioxCod(in, reply);
                    }
                case -71125007: 
                    if (method.equals("codOficinaMax")) {
                        return codOficinaMax(in, reply);
                    }
                case -44135961: 
                    if (method.equals("existeIngresoForm")) {
                        return existeIngresoForm(in, reply);
                    }
                case 3487876: 
                    if (method.equals("busIngresoxOficina")) {
                        return busIngresoxOficina(in, reply);
                    }
                case 5070053: 
                    if (method.equals("findPerfil")) {
                        return findPerfil(in, reply);
                    }
                case 37797598: 
                    if (method.equals("findConsultarPlanesxMes")) {
                        return findConsultarPlanesxMes(in, reply);
                    }
                case 43779428: 
                    if (method.equals("pggSeguimiento1__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue")) {
                        return pggSeguimiento1__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue(in, reply);
                    }
                case 58471193: 
                    if (method.equals("buscarResumenMontos")) {
                        return buscarResumenMontos(in, reply);
                    }
                case 91463173: 
                    if (method.equals("findConsultaPlanes")) {
                        return findConsultaPlanes(in, reply);
                    }
                case 105639460: 
                    if (method.equals("reportexOficina")) {
                        return reportexOficina(in, reply);
                    }
                case 115793018: 
                    if (method.equals("consultaSeguimientoAccionEsfuerzo")) {
                        return consultaSeguimientoAccionEsfuerzo(in, reply);
                    }
                case 145174001: 
                    if (method.equals("findUbicar")) {
                        return findUbicar(in, reply);
                    }
                case 210410021: 
                    if (method.equals("createPermisoPerfil")) {
                        return createPermisoPerfil(in, reply);
                    }
                case 245335032: 
                    if (method.equals("busAccionesPGG3")) {
                        return busAccionesPGG3(in, reply);
                    }
                case 275785749: 
                    if (method.equals("borrarEpigrafe")) {
                        return borrarEpigrafe(in, reply);
                    }
                case 278627027: 
                    if (method.equals("createEpigrafe")) {
                        return createEpigrafe(in, reply);
                    }
                case 313222960: 
                    if (method.equals("xInsertarTEquivalencias")) {
                        return xInsertarTEquivalencias(in, reply);
                    }
                case 330502621: 
                    if (method.equals("xInsertarTCampanhasDetalle")) {
                        return xInsertarTCampanhasDetalle(in, reply);
                    }
                case 375275603: 
                    if (method.equals("pggSeguimiento2__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__com_grupobbva_bc_per_tele_sdo_serializable_ProgSeguimiento")) {
                        return pggSeguimiento2__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__com_grupobbva_bc_per_tele_sdo_serializable_ProgSeguimiento(in, reply);
                    }
                case 390988999: 
                    if (method.equals("busIngresoxOFICINAxMes")) {
                        return busIngresoxOFICINAxMes(in, reply);
                    }
                case 408528706: 
                    if (method.equals("findHijas")) {
                        return findHijas(in, reply);
                    }
                case 453265874: 
                    if (method.equals("pggSeguimiento1__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__com_grupobbva_bc_per_tele_sdo_serializable_ProgSeguimiento")) {
                        return pggSeguimiento1__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__com_grupobbva_bc_per_tele_sdo_serializable_ProgSeguimiento(in, reply);
                    }
                case 454624802: 
                    if (method.equals("findByCodigoOficina")) {
                        return findByCodigoOficina(in, reply);
                    }
                case 457806247: 
                    if (method.equals("borrarPlanIngresado")) {
                        return borrarPlanIngresado(in, reply);
                    }
                case 462064892: 
                    if (method.equals("actualizarMetaGestoresPlanes")) {
                        return actualizarMetaGestoresPlanes(in, reply);
                    }
                case 482286553: 
                    if (method.equals("findxIdMenu")) {
                        return findxIdMenu(in, reply);
                    }
                case 494489386: 
                    if (method.equals("reportePGOResumenxAnioMes")) {
                        return reportePGOResumenxAnioMes(in, reply);
                    }
                case 509395093: 
                    if (method.equals("busAllAnho")) {
                        return busAllAnho(in, reply);
                    }
                case 509396947: 
                    if (method.equals("actualizarOficinaHija")) {
                        return actualizarOficinaHija(in, reply);
                    }
                case 543457505: 
                    if (method.equals("actualizarIngreso")) {
                        return actualizarIngreso(in, reply);
                    }
                case 547761815: 
                    if (method.equals("xInsertarTTerritorio")) {
                        return xInsertarTTerritorio(in, reply);
                    }
                case 592134028: 
                    if (method.equals("busIngresoxTerritorio")) {
                        return busIngresoxTerritorio(in, reply);
                    }
                case 594043011: 
                    if (method.equals("findByCodOficina")) {
                        return findByCodOficina(in, reply);
                    }
                case 609107530: 
                    if (method.equals("codigoCampMax")) {
                        return codigoCampMax(in, reply);
                    }
                case 617502676: 
                    if (method.equals("findMultiByPrimaryKey")) {
                        return findMultiByPrimaryKey(in, reply);
                    }
                case 627284711: 
                    if (method.equals("listadoIngresoxDia")) {
                        return listadoIngresoxDia(in, reply);
                    }
                case 632146945: 
                    if (method.equals("xBusAllTablaFirmas")) {
                        return xBusAllTablaFirmas(in, reply);
                    }
                case 669611697: 
                    if (method.equals("findByCodMulti")) {
                        return findByCodMulti(in, reply);
                    }
                case 686315548: 
                    if (method.equals("findConsultaPlanesResumen")) {
                        return findConsultaPlanesResumen(in, reply);
                    }
                case 698653861: 
                    if (method.equals("createMaestrPlan")) {
                        return createMaestrPlan(in, reply);
                    }
                case 701657072: 
                    if (method.equals("findEpiByAnho")) {
                        return findEpiByAnho(in, reply);
                    }
                case 710651552: 
                    if (method.equals("busIngresoxTERRITORIOxAnho")) {
                        return busIngresoxTERRITORIOxAnho(in, reply);
                    }
                case 731139710: 
                    if (method.equals("consultaSeguimientoAccionEsfuerzoPGO")) {
                        return consultaSeguimientoAccionEsfuerzoPGO(in, reply);
                    }
                case 775398748: 
                    if (method.equals("obtenerPrimerMesPresup")) {
                        return obtenerPrimerMesPresup(in, reply);
                    }
                case 873145872: 
                    if (method.equals("findAllOficinas")) {
                        return findAllOficinas(in, reply);
                    }
                case 882445423: 
                    if (method.equals("actualizarProgTerritorio")) {
                        return actualizarProgTerritorio(in, reply);
                    }
                case 893839371: 
                    if (method.equals("insertarIngresoForm")) {
                        return insertarIngresoForm(in, reply);
                    }
                case 902028524: 
                    if (method.equals("xInsertarTPerfiles")) {
                        return xInsertarTPerfiles(in, reply);
                    }
                case 918296020: 
                    if (method.equals("registrarPermisoPerfil")) {
                        return registrarPermisoPerfil(in, reply);
                    }
                case 920703656: 
                    if (method.equals("xBusAllTablaPlanes")) {
                        return xBusAllTablaPlanes(in, reply);
                    }
                case 934387646: 
                    if (method.equals("promedioMensual")) {
                        return promedioMensual(in, reply);
                    }
                case 974325597: 
                    if (method.equals("findPermisoPerfilxTipAccxValorRCP")) {
                        return findPermisoPerfilxTipAccxValorRCP(in, reply);
                    }
                case 1007346537: 
                    if (method.equals("editarMensajeTerritorio")) {
                        return editarMensajeTerritorio(in, reply);
                    }
                case 1012220085: 
                    if (method.equals("busOficinaxTerritorio__CORBA_WStringValue")) {
                        return busOficinaxTerritorio__CORBA_WStringValue(in, reply);
                    }
                case 1024135100: 
                    if (method.equals("nuevoTerritorio")) {
                        return nuevoTerritorio(in, reply);
                    }
                case 1058914185: 
                    if (method.equals("xBusAllTablaTerritorioAntiguo")) {
                        return xBusAllTablaTerritorioAntiguo(in, reply);
                    }
                case 1066196262: 
                    if (method.equals("getCorrelativo")) {
                        return getCorrelativo(in, reply);
                    }
                case 1074486467: 
                    if (method.equals("xBusAllTablaCampanhasDetalleAntiguo")) {
                        return xBusAllTablaCampanhasDetalleAntiguo(in, reply);
                    }
                case 1111300211: 
                    if (method.equals("findTodosProgTerritorio")) {
                        return findTodosProgTerritorio(in, reply);
                    }
                case 1137795819: 
                    if (method.equals("xBusAllTablaParametros")) {
                        return xBusAllTablaParametros(in, reply);
                    }
                case 1190733396: 
                    if (method.equals("busAnhosAcciones")) {
                        return busAnhosAcciones(in, reply);
                    }
                case 1205594175: 
                    if (method.equals("reportexTerritorioxAnio")) {
                        return reportexTerritorioxAnio(in, reply);
                    }
                case 1228937741: 
                    if (method.equals("reportePGOEsfuerzos")) {
                        return reportePGOEsfuerzos(in, reply);
                    }
                case 1244843316: 
                    if (method.equals("xBusAllTablaEpigrafesAntiguo")) {
                        return xBusAllTablaEpigrafesAntiguo(in, reply);
                    }
                case 1264756395: 
                    if (method.equals("isIdentical")) {
                        return isIdentical(in, reply);
                    }
                case 1274834981: 
                    if (method.equals("findByCodEpigAnho")) {
                        return findByCodEpigAnho(in, reply);
                    }
                case 1285734379: 
                    if (method.equals("findGestorByCodigo")) {
                        return findGestorByCodigo(in, reply);
                    }
                case 1308074888: 
                    if (method.equals("findTerritorioByCodOficina")) {
                        return findTerritorioByCodOficina(in, reply);
                    }
                case 1311960186: 
                    if (method.equals("findPermisoPerfilById")) {
                        return findPermisoPerfilById(in, reply);
                    }
                case 1338484973: 
                    if (method.equals("findAllTerritorio")) {
                        return findAllTerritorio(in, reply);
                    }
                case 1343836679: 
                    if (method.equals("updateMetasGestor")) {
                        return updateMetasGestor(in, reply);
                    }
                case 1348602422: 
                    if (method.equals("busAllTerritorioActivo")) {
                        return busAllTerritorioActivo(in, reply);
                    }
                case 1369001083: 
                    if (method.equals("createMenu")) {
                        return createMenu(in, reply);
                    }
                case 1369096773: 
                    if (method.equals("createPlan")) {
                        return createPlan(in, reply);
                    }
                case 1416752807: 
                    if (method.equals("busIngresoxUsuario")) {
                        return busIngresoxUsuario(in, reply);
                    }
                case 1428171460: 
                    if (method.equals("reportexUsuarioxAnio")) {
                        return reportexUsuarioxAnio(in, reply);
                    }
                case 1430077602: 
                    if (method.equals("findMesesReferencia")) {
                        return findMesesReferencia(in, reply);
                    }
                case 1433378000: 
                    if (method.equals("editarOficina")) {
                        return editarOficina(in, reply);
                    }
                case 1436043752: 
                    if (method.equals("createPerfil")) {
                        return createPerfil(in, reply);
                    }
                case 1449273992: 
                    if (method.equals("listarDiasMesesxAnio")) {
                        return listarDiasMesesxAnio(in, reply);
                    }
                case 1478744874: 
                    if (method.equals("eliminarOficina")) {
                        return eliminarOficina(in, reply);
                    }
                case 1501300813: 
                    if (method.equals("createEquivalencia")) {
                        return createEquivalencia(in, reply);
                    }
                case 1510866575: 
                    if (method.equals("findAllOficinaConMetas")) {
                        return findAllOficinaConMetas(in, reply);
                    }
                case 1518904391: 
                    if (method.equals("reportexUsuario")) {
                        return reportexUsuario(in, reply);
                    }
                case 1529486766: 
                    if (method.equals("createUpdatePlan")) {
                        return createUpdatePlan(in, reply);
                    }
                case 1570411998: 
                    if (method.equals("actualizarGestoresEliminadosLDAP")) {
                        return actualizarGestoresEliminadosLDAP(in, reply);
                    }
                case 1592357315: 
                    if (method.equals("actualizarCargoGestoresLDAP")) {
                        return actualizarCargoGestoresLDAP(in, reply);
                    }
                case 1634116397: 
                    if (method.equals("findByCodTerritorio")) {
                        return findByCodTerritorio(in, reply);
                    }
                case 1653956386: 
                    if (method.equals("edicionCampaniaDetalle")) {
                        return edicionCampaniaDetalle(in, reply);
                    }
                case 1675292218: 
                    if (method.equals("xInsertarTCampanhas")) {
                        return xInsertarTCampanhas(in, reply);
                    }
                case 1680232154: 
                    if (method.equals("nuevoCampaniaDetalle")) {
                        return nuevoCampaniaDetalle(in, reply);
                    }
                case 1695108546: 
                    if (method.equals("actualizarEstadoFlag")) {
                        return actualizarEstadoFlag(in, reply);
                    }
                case 1720275748: 
                    if (method.equals("consultarCampaniasDetallesPGG")) {
                        return consultarCampaniasDetallesPGG(in, reply);
                    }
                case 1721441621: 
                    if (method.equals("buscarMontoGestor")) {
                        return buscarMontoGestor(in, reply);
                    }
                case 1734600000: 
                    if (method.equals("existeDataMaestroPlanesMesAnio")) {
                        return existeDataMaestroPlanesMesAnio(in, reply);
                    }
                case 1764377002: 
                    if (method.equals("deleteMenu")) {
                        return deleteMenu(in, reply);
                    }
                case 1782569551: 
                    if (method.equals("findTodosOficinaHija")) {
                        return findTodosOficinaHija(in, reply);
                    }
                case 1822108351: 
                    if (method.equals("existeDataPlanesMesAnio")) {
                        return existeDataPlanesMesAnio(in, reply);
                    }
                case 1832970315: 
                    if (method.equals("updateCorporativa")) {
                        return updateCorporativa(in, reply);
                    }
                case 1857425177: 
                    if (method.equals("busGestorxOficinaxAnioxMes")) {
                        return busGestorxOficinaxAnioxMes(in, reply);
                    }
                case 1944413392: 
                    if (method.equals("_get_handle")) {
                        return _get_handle(in, reply);
                    }
                case 1947553415: 
                    if (method.equals("busAccion")) {
                        return busAccion(in, reply);
                    }
                case 1966531610: 
                    if (method.equals("findAllOficinaByCodTerri")) {
                        return findAllOficinaByCodTerri(in, reply);
                    }
                case 1992450594: 
                    if (method.equals("nuevaOficina")) {
                        return nuevaOficina(in, reply);
                    }
                case 2029890785: 
                    if (method.equals("editarCampania")) {
                        return editarCampania(in, reply);
                    }
                case 2059185183: 
                    if (method.equals("xBusAllTablaMetasGestor")) {
                        return xBusAllTablaMetasGestor(in, reply);
                    }
                case 2083082192: 
                    if (method.equals("nuevaMetaGestor")) {
                        return nuevaMetaGestor(in, reply);
                    }
                case 2102394675: 
                    if (method.equals("busOficinaxTerritorio__CORBA_WStringValue__boolean")) {
                        return busOficinaxTerritorio__CORBA_WStringValue__boolean(in, reply);
                    }
                case 2140191003: 
                    if (method.equals("findByCodOficinaHija")) {
                        return findByCodOficinaHija(in, reply);
                    }
            }
            throw new BAD_OPERATION();
        } catch (SystemException ex) {
            throw ex;
        } catch (Throwable ex) {
            throw new UnknownException(ex);
        }
    }
    
    private OutputStream _get_EJBHome(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        EJBHome result = target.getEJBHome();
        OutputStream out = reply.createReply();
        Util.writeRemoteObject(out,result);
        return out;
    }
    
    private OutputStream _get_primaryKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Object result = target.getPrimaryKey();
        OutputStream out = reply.createReply();
        Util.writeAny(out,result);
        return out;
    }
    
    private OutputStream remove(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        try {
            target.remove();
        } catch (RemoveException ex) {
            String id = "IDL:javax/ejb/RemoveEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,RemoveException.class);
            return out;
        }
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_handle(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Handle result = target.getHandle();
        OutputStream out = reply.createReply();
        Util.writeAbstractObject(out,result);
        return out;
    }
    
    private OutputStream isIdentical(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        EJBObject arg0 = (EJBObject) in.read_Object(EJBObject.class);
        boolean result = target.isIdentical(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream findxCodPerfil(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.findxCodPerfil(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findAllMenu(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.findAllMenu();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream createMenu(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Menu arg0 = (Menu) in.read_value(Menu.class);
        boolean result = target.createMenu(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream deleteMenu(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        boolean result = target.deleteMenu(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream findxIdMenu(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Menu result = target.findxIdMenu(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Menu.class);
        return out;
    }
    
    private OutputStream updateMenu(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Menu arg0 = (Menu) in.read_value(Menu.class);
        boolean result = target.updateMenu(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream findPermisoPerfilxTipAccxValorRCP(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        PermisoPerfil result = target.findPermisoPerfilxTipAccxValorRCP(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,PermisoPerfil.class);
        return out;
    }
    
    private OutputStream findAllPermisoPerfil(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.findAllPermisoPerfil();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream deletePermisoPerfil(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        boolean result = target.deletePermisoPerfil(arg0, arg1, arg2);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream findPermisoPerfilById(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        PermisoPerfil result = target.findPermisoPerfilById(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,PermisoPerfil.class);
        return out;
    }
    
    private OutputStream findAllPerfil(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.findAllPerfil();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findAllEquivalencias(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.findAllEquivalencias();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findPerfil(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Perfil result = target.findPerfil(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Perfil.class);
        return out;
    }
    
    private OutputStream updatePerfil(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Perfil arg0 = (Perfil) in.read_value(Perfil.class);
        boolean result = target.updatePerfil(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream updateEquivalencia(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Equivalencia arg0 = (Equivalencia) in.read_value(Equivalencia.class);
        boolean result = target.updateEquivalencia(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream deletePerfil(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        boolean result = target.deletePerfil(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream createPerfil(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Perfil arg0 = (Perfil) in.read_value(Perfil.class);
        boolean result = target.createPerfil(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream findByCodMulti(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.findByCodMulti(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream updateCorporativa(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Multitabla arg0 = (Multitabla) in.read_value(Multitabla.class);
        boolean result = target.updateCorporativa(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream findByID(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Multitabla result = target.findByID(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Multitabla.class);
        return out;
    }
    
    private OutputStream findAllOficinaByCodTerri(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.findAllOficinaByCodTerri(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findAllOficinas(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.findAllOficinas();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busAllTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.busAllTerritorio();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busTerritorioxCod(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.busTerritorioxCod(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream eliminarTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.eliminarTerritorio(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findAllParametro(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.findAllParametro();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findConsultarPlanesxMes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.findConsultarPlanesxMes(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findUbicar(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        MaestroPlan result = target.findUbicar(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,MaestroPlan.class);
        return out;
    }
    
    private OutputStream findEquivalenciaByCodCargo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Equivalencia result = target.findEquivalenciaByCodCargo(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Equivalencia.class);
        return out;
    }
    
    private OutputStream findAllTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.findAllTerritorio();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream deleteEquivalencia(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        boolean result = target.deleteEquivalencia(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream createEquivalencia(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Equivalencia arg0 = (Equivalencia) in.read_value(Equivalencia.class);
        boolean result = target.createEquivalencia(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream findByCodTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Territorio result = target.findByCodTerritorio(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Territorio.class);
        return out;
    }
    
    private OutputStream findByCodOficina(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Oficina result = target.findByCodOficina(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Oficina.class);
        return out;
    }
    
    private OutputStream findParametroAll(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Parametro result = target.findParametroAll();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Parametro.class);
        return out;
    }
    
    private OutputStream findListaByCodOficina(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.findListaByCodOficina(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findMultiByPrimaryKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        Multitabla result = target.findMultiByPrimaryKey(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Multitabla.class);
        return out;
    }
    
    private OutputStream findByMultiForPresup(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.findByMultiForPresup(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findConsultaPlanesResumen(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Plan result = target.findConsultaPlanesResumen(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Plan.class);
        return out;
    }
    
    private OutputStream findEpiByAnho(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.findEpiByAnho(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findByCodEpigAnho(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        Epigrafe result = target.findByCodEpigAnho(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Epigrafe.class);
        return out;
    }
    
    private OutputStream findMetGestorByPrimaryKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        MetasGestor result = target.findMetGestorByPrimaryKey(arg0, arg1, arg2, arg3, arg4);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,MetasGestor.class);
        return out;
    }
    
    private OutputStream createMetasGestor(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        MetasGestor arg0 = (MetasGestor) in.read_value(MetasGestor.class);
        boolean result = target.createMetasGestor(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream updateMetasGestor(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        MetasGestor arg0 = (MetasGestor) in.read_value(MetasGestor.class);
        boolean result = target.updateMetasGestor(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream getCorrelativo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String result = target.getCorrelativo(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream findFirmByAnoMesCgesItem(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Firmas result = target.findFirmByAnoMesCgesItem(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Firmas.class);
        return out;
    }
    
    private OutputStream consultarPLanesAccion(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.consultarPLanesAccion(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream consultarCampaniasDetalles(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.consultarCampaniasDetalles(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream consultarCampaniasDetallesPGG(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.consultarCampaniasDetallesPGG(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream consultarPlanesAccionesPPG(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.consultarPlanesAccionesPPG(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream updatePlan(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Plan arg0 = (Plan) in.read_value(Plan.class);
        boolean result = target.updatePlan(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream busAllAnho(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.busAllAnho();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream reportePGOResumen2(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Hashtable result = target.reportePGOResumen2(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Hashtable.class);
        return out;
    }
    
    private OutputStream reportePGOResumen(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Hashtable arg1 = (Hashtable) in.read_value(Hashtable.class);
        Vector result = target.reportePGOResumen(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busAccionesPGG3(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.busAccionesPGG3(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream codigoAccion(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int result = target.codigoAccion();
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream eliminarAccion(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.eliminarAccion(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busAnhosAcciones(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.busAnhosAcciones();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busAnhoMaxAcciones(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.busAnhoMaxAcciones();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream codOficinaMax(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.codOficinaMax(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream reportePGO1(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Vector result = target.reportePGO1(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busAllAnhos(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.busAllAnhos();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busGestorxOficina(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.busGestorxOficina(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busOficinaCodyNom(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.busOficinaCodyNom(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream eliminarCampania(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.eliminarCampania(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream mostrarEditarCampania(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.mostrarEditarCampania(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream listaReportePlanificacion(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.listaReportePlanificacion();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busEpigrafeAcciones2(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.busEpigrafeAcciones2(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream codigoCampMax(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int result = target.codigoCampMax();
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream listaReporteSeguimiento2(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.listaReporteSeguimiento2(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream listaReporteSeguimiento1(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.listaReporteSeguimiento1(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream listaReportePPG(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.listaReportePPG(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busID_IngresoMax(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int result = target.busID_IngresoMax();
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream createPlan(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Plan arg0 = (Plan) in.read_value(Plan.class);
        boolean result = target.createPlan(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream createEpigrafe(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Epigrafe arg0 = (Epigrafe) in.read_value(Epigrafe.class);
        boolean result = target.createEpigrafe(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream createMaestrPlan(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        boolean result = target.createMaestrPlan(arg0, arg1, arg2, arg3);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream busOficinaxTerritorio__CORBA_WStringValue(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.busOficinaxTerritorio(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findPlanAnual(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.findPlanAnual(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findAllOficinaConMetas(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Vector result = target.findAllOficinaConMetas(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findByCodigoOficina(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        boolean result = target.findByCodigoOficina(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream findOficinaAndTerri(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        boolean result = target.findOficinaAndTerri(arg0, arg1);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream busTerritorioxRegistroLDAP(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.busTerritorioxRegistroLDAP(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream borrarMaestro(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        boolean result = target.borrarMaestro();
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream borrarEpigrafe(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        boolean result = target.borrarEpigrafe();
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream findEpigrafeInf(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.findEpigrafeInf(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findAllOficinaByCodTerri_MOD1(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Vector result = target.findAllOficinaByCodTerri_MOD1(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findAllOficinaByCodTerri_MOD2(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.findAllOficinaByCodTerri_MOD2(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream editarTerritoriosDeOficinas(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.editarTerritoriosDeOficinas(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream pggSeguimiento1__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.pggSeguimiento1(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream pggEsfuerzoAdicional1__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.pggEsfuerzoAdicional1(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream pggSeguimiento2__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.pggSeguimiento2(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream pggEsfuerzoAdicional2__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.pggEsfuerzoAdicional2(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream existeDataMaestroPlanesMesAnio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        boolean result = target.existeDataMaestroPlanesMesAnio(arg0, arg1);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream existeDataPlanesMesAnio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        boolean result = target.existeDataPlanesMesAnio(arg0, arg1);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream findEpigrafesinPlanes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Vector result = target.findEpigrafesinPlanes(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream mostrarEsfuerzoCampania(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.mostrarEsfuerzoCampania(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream listaCampaniaDetalle(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        Vector result = target.listaCampaniaDetalle(arg0, arg1, arg2, arg3, arg4);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream eliminarCampaniaDetalle(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        boolean result = target.eliminarCampaniaDetalle(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream findTerritorioByCodOficina(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Territorio result = target.findTerritorioByCodOficina(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Territorio.class);
        return out;
    }
    
    private OutputStream actualizarPorcentajeEpigrafe(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Epigrafe arg0 = (Epigrafe) in.read_value(Epigrafe.class);
        int result = target.actualizarPorcentajeEpigrafe(arg0);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream busAllTerritorioActivo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.busAllTerritorioActivo();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream reportePGOResumenxAnioMes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Vector result = target.reportePGOResumenxAnioMes(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busGestorxOficinaxAnioxMes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Vector result = target.busGestorxOficinaxAnioxMes(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busAccion(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Accion result = target.busAccion(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Accion.class);
        return out;
    }
    
    private OutputStream busCampaniaDetalle(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Campanias result = target.busCampaniaDetalle(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Campanias.class);
        return out;
    }
    
    private OutputStream createPermisoPerfil(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        PermisoPerfil arg0 = (PermisoPerfil) in.read_value(PermisoPerfil.class);
        boolean result = target.createPermisoPerfil(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream updatePermisoPerfil(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        PermisoPerfil arg0 = (PermisoPerfil) in.read_value(PermisoPerfil.class);
        PermisoPerfil arg1 = (PermisoPerfil) in.read_value(PermisoPerfil.class);
        boolean result = target.updatePermisoPerfil(arg0, arg1);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream reportePGOEsfuerzos(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Vector result = target.reportePGOEsfuerzos(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream metasGestor(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        int arg1 = in.read_long();
        int arg2 = in.read_long();
        String arg3 = (String) in.read_value(String.class);
        int result = target.metasGestor(arg0, arg1, arg2, arg3);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream metasOficina(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        int arg1 = in.read_long();
        int arg2 = in.read_long();
        String arg3 = (String) in.read_value(String.class);
        int result = target.metasOficina(arg0, arg1, arg2, arg3);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xInsertarTPlanes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        int arg5 = in.read_long();
        int arg6 = in.read_long();
        int arg7 = in.read_long();
        int arg8 = in.read_long();
        int arg9 = in.read_long();
        int arg10 = in.read_long();
        int arg11 = in.read_long();
        int arg12 = in.read_long();
        int arg13 = in.read_long();
        int arg14 = in.read_long();
        int arg15 = in.read_long();
        int arg16 = in.read_long();
        String arg17 = (String) in.read_value(String.class);
        int arg18 = in.read_long();
        int arg19 = in.read_long();
        int arg20 = in.read_long();
        int arg21 = in.read_long();
        int arg22 = in.read_long();
        int arg23 = in.read_long();
        String arg24 = (String) in.read_value(String.class);
        String arg25 = (String) in.read_value(String.class);
        int arg26 = in.read_long();
        int arg27 = in.read_long();
        int arg28 = in.read_long();
        int arg29 = in.read_long();
        int arg30 = in.read_long();
        int result = target.xInsertarTPlanes(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaFirmas(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.xBusAllTablaFirmas();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xInsertarTParametros(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Date arg0 = (Date) in.read_value(Date.class);
        Date arg1 = (Date) in.read_value(Date.class);
        Date arg2 = (Date) in.read_value(Date.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        Date arg6 = (Date) in.read_value(Date.class);
        int result = target.xInsertarTParametros(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaParametros(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.xBusAllTablaParametros();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xInsertarTMetasGestor(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        Date arg7 = (Date) in.read_value(Date.class);
        String arg8 = (String) in.read_value(String.class);
        String arg9 = (String) in.read_value(String.class);
        String arg10 = (String) in.read_value(String.class);
        String arg11 = (String) in.read_value(String.class);
        int result = target.xInsertarTMetasGestor(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaMetasGestor(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.xBusAllTablaMetasGestor(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xInsertarTMaestroPlanes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        Date arg5 = (Date) in.read_value(Date.class);
        int result = target.xInsertarTMaestroPlanes(arg0, arg1, arg2, arg3, arg4, arg5);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaMaestroPlanes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.xBusAllTablaMaestroPlanes(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xInsertarTFirmas(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        Date arg6 = (Date) in.read_value(Date.class);
        int result = target.xInsertarTFirmas(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xInsertarTPerfiles(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        int result = target.xInsertarTPerfiles(arg0, arg1);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaPerfiles(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.xBusAllTablaPerfiles();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xInsertarTEquivalencias(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        int result = target.xInsertarTEquivalencias(arg0, arg1);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaEquivalencias(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.xBusAllTablaEquivalencias();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xInsertarTCampanhasDetalle(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        int arg5 = in.read_long();
        int arg6 = in.read_long();
        int arg7 = in.read_long();
        int arg8 = in.read_long();
        int arg9 = in.read_long();
        int arg10 = in.read_long();
        int arg11 = in.read_long();
        int arg12 = in.read_long();
        String arg13 = (String) in.read_value(String.class);
        String arg14 = (String) in.read_value(String.class);
        Date arg15 = (Date) in.read_value(Date.class);
        Date arg16 = (Date) in.read_value(Date.class);
        Date arg17 = (Date) in.read_value(Date.class);
        String arg18 = (String) in.read_value(String.class);
        int result = target.xInsertarTCampanhasDetalle(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaCampanhasDetalleAntiguo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.xBusAllTablaCampanhasDetalleAntiguo();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xInsertarTCampanhas(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        String arg7 = (String) in.read_value(String.class);
        Date arg8 = (Date) in.read_value(Date.class);
        String arg9 = (String) in.read_value(String.class);
        int result = target.xInsertarTCampanhas(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xInsertarTOficina(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        int result = target.xInsertarTOficina(arg0, arg1, arg2);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaOficinaAntiguo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.xBusAllTablaOficinaAntiguo();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xBusAllTablaTerritorioAntiguo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.xBusAllTablaTerritorioAntiguo();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xInsertarTTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        int result = target.xInsertarTTerritorio(arg0, arg1);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xInsertarTEpigrafes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        String arg7 = (String) in.read_value(String.class);
        String arg8 = (String) in.read_value(String.class);
        String arg9 = (String) in.read_value(String.class);
        int result = target.xInsertarTEpigrafes(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaEpigrafesAntiguo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.xBusAllTablaEpigrafesAntiguo();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xDameTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String result = target.xDameTerritorio(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream xInsertarTAcciones(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        int arg5 = in.read_long();
        int arg6 = in.read_long();
        int arg7 = in.read_long();
        int arg8 = in.read_long();
        int arg9 = in.read_long();
        int arg10 = in.read_long();
        int arg11 = in.read_long();
        int arg12 = in.read_long();
        String arg13 = (String) in.read_value(String.class);
        String arg14 = (String) in.read_value(String.class);
        Date arg15 = (Date) in.read_value(Date.class);
        Date arg16 = (Date) in.read_value(Date.class);
        Date arg17 = (Date) in.read_value(Date.class);
        String arg18 = (String) in.read_value(String.class);
        int result = target.xInsertarTAcciones(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream buscarEstadoFlag(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.buscarEstadoFlag();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream actualizarEstadoFlag(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        int result = target.actualizarEstadoFlag(arg0);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaAccionesAntiguo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.xBusAllTablaAccionesAntiguo(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xBusAllTablaPlanes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.xBusAllTablaPlanes(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xBusAllTablaCampanhasAntiguo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.xBusAllTablaCampanhasAntiguo(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream obtenerPrimerMesPresup(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int result = target.obtenerPrimerMesPresup();
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream createUpdatePlan(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Plan arg0 = (Plan) in.read_value(Plan.class);
        boolean result = target.createUpdatePlan(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream buscarUsuariosLDAP(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        int arg2 = in.read_long();
        Vector result = target.buscarUsuariosLDAP(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream eliminarProgTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        ProgSeguimiento arg0 = (ProgSeguimiento) in.read_value(ProgSeguimiento.class);
        boolean result = target.eliminarProgTerritorio(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream actualizarProgTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        ProgSeguimiento arg0 = (ProgSeguimiento) in.read_value(ProgSeguimiento.class);
        boolean result = target.actualizarProgTerritorio(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream crearProgTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        ProgSeguimiento arg0 = (ProgSeguimiento) in.read_value(ProgSeguimiento.class);
        boolean result = target.crearProgTerritorio(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream findTodosProgTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        ProgSeguimiento arg0 = (ProgSeguimiento) in.read_value(ProgSeguimiento.class);
        Vector result = target.findTodosProgTerritorio(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findProgTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        ProgSeguimiento arg0 = (ProgSeguimiento) in.read_value(ProgSeguimiento.class);
        ProgSeguimiento result = target.findProgTerritorio(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ProgSeguimiento.class);
        return out;
    }
    
    private OutputStream pggEsfuerzoAdicional1__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__com_grupobbva_bc_per_tele_sdo_serializable_ProgSeguimiento(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        ProgSeguimiento arg4 = (ProgSeguimiento) in.read_value(ProgSeguimiento.class);
        Vector result = target.pggEsfuerzoAdicional1(arg0, arg1, arg2, arg3, arg4);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream pggSeguimiento2__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__com_grupobbva_bc_per_tele_sdo_serializable_ProgSeguimiento(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        ProgSeguimiento arg4 = (ProgSeguimiento) in.read_value(ProgSeguimiento.class);
        Vector result = target.pggSeguimiento2(arg0, arg1, arg2, arg3, arg4);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream pggEsfuerzoAdicional2__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__com_grupobbva_bc_per_tele_sdo_serializable_ProgSeguimiento(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        ProgSeguimiento arg4 = (ProgSeguimiento) in.read_value(ProgSeguimiento.class);
        Vector result = target.pggEsfuerzoAdicional2(arg0, arg1, arg2, arg3, arg4);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findProgramacionSeguimiento(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        ProgSeguimiento result = target.findProgramacionSeguimiento(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ProgSeguimiento.class);
        return out;
    }
    
    private OutputStream pggSeguimiento1__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__CORBA_WStringValue__com_grupobbva_bc_per_tele_sdo_serializable_ProgSeguimiento(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        ProgSeguimiento arg4 = (ProgSeguimiento) in.read_value(ProgSeguimiento.class);
        Vector result = target.pggSeguimiento1(arg0, arg1, arg2, arg3, arg4);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busIngresoxDIA(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxDIA(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busIngresoxOFICINAxAnho(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxOFICINAxAnho(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busIngresoxOFICINAxMes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxOFICINAxMes(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busIngresoxTERRITORIOxAnho(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxTERRITORIOxAnho(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busIngresoxTERRITORIOxMes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxTERRITORIOxMes(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busIngresoxUSUARIOxAnho(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxUSUARIOxAnho(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busIngresoxUSUARIOxMes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxUSUARIOxMes(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream actualizarIngreso(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        int arg1 = in.read_long();
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        target.actualizarIngreso(arg0, arg1, arg2, arg3);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream busIngresoxUsuario(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxUsuario(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream nuevoIngreso(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        int result = target.nuevoIngreso(arg0, arg1, arg2, arg3, arg4, arg5);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream busIngresoxOficina(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxOficina(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream busIngresoxTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.busIngresoxTerritorio(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findGestorByCodigo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        MetasGestor result = target.findGestorByCodigo(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,MetasGestor.class);
        return out;
    }
    
    private OutputStream findGestorByCodMonthYear(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        MetasGestor result = target.findGestorByCodMonthYear(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,MetasGestor.class);
        return out;
    }
    
    private OutputStream findConsultaPlanes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        Vector result = target.findConsultaPlanes(arg0, arg1, arg2, arg3, arg4);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream updateElemMultitabla(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Multitabla arg0 = (Multitabla) in.read_value(Multitabla.class);
        boolean result = target.updateElemMultitabla(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream findMesesReferencia(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        int arg1 = in.read_long();
        int result = target.findMesesReferencia(arg0, arg1);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream insertUpdateMesesReferencia(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        int arg1 = in.read_long();
        int arg2 = in.read_long();
        boolean result = target.insertUpdateMesesReferencia(arg0, arg1, arg2);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream testearBD(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.testearBD();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream findOficinaHija(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        OficinaHija arg0 = (OficinaHija) in.read_value(OficinaHija.class);
        OficinaHija result = target.findOficinaHija(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,OficinaHija.class);
        return out;
    }
    
    private OutputStream crearOficinaHija(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        OficinaHija arg0 = (OficinaHija) in.read_value(OficinaHija.class);
        boolean result = target.crearOficinaHija(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream actualizarOficinaHija(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        OficinaHija arg0 = (OficinaHija) in.read_value(OficinaHija.class);
        boolean result = target.actualizarOficinaHija(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream eliminarOficinaHija(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        OficinaHija arg0 = (OficinaHija) in.read_value(OficinaHija.class);
        boolean result = target.eliminarOficinaHija(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream findTodosOficinaHija(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.findTodosOficinaHija();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findHijas(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.findHijas(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream distribuirGOF(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector arg0 = (Vector) in.read_value(Vector.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        Vector result = target.distribuirGOF(arg0, arg1, arg2, arg3, arg4);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream buscarResumenMontos(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector arg0 = (Vector) in.read_value(Vector.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        HashMap result = target.buscarResumenMontos(arg0, arg1, arg2, arg3, arg4);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,HashMap.class);
        return out;
    }
    
    private OutputStream buscarMontoGestor(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        BigDecimal result = target.buscarMontoGestor(arg0, arg1, arg2, arg3, arg4);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private OutputStream findByCodOficinaHija(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Oficina result = target.findByCodOficinaHija(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Oficina.class);
        return out;
    }
    
    private OutputStream editarMensajeTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        target.editarMensajeTerritorio(arg0, arg1, arg2);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream eliminarMetaGestoresHijas(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector arg0 = (Vector) in.read_value(Vector.class);
        target.eliminarMetaGestoresHijas(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream editarOficina(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Oficina arg0 = (Oficina) in.read_value(Oficina.class);
        Vector result = target.editarOficina(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream eliminarOficina(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        int result = target.eliminarOficina(arg0);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream nuevoTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        Vector result = target.nuevoTerritorio(arg0, arg1, arg2, arg3, arg4);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream modificarTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        Vector result = target.modificarTerritorio(arg0, arg1, arg2, arg3, arg4, arg5);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream borrarPlanIngresado(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        boolean result = target.borrarPlanIngresado(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream nuevaAccion(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        String arg7 = (String) in.read_value(String.class);
        String arg8 = (String) in.read_value(String.class);
        String arg9 = (String) in.read_value(String.class);
        String arg10 = (String) in.read_value(String.class);
        String arg11 = (String) in.read_value(String.class);
        String arg12 = (String) in.read_value(String.class);
        String arg13 = (String) in.read_value(String.class);
        String arg14 = (String) in.read_value(String.class);
        String arg15 = (String) in.read_value(String.class);
        String arg16 = (String) in.read_value(String.class);
        Vector result = target.nuevaAccion(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream nuevaCampania(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        String arg7 = (String) in.read_value(String.class);
        String arg8 = (String) in.read_value(String.class);
        String arg9 = (String) in.read_value(String.class);
        String arg10 = (String) in.read_value(String.class);
        Vector result = target.nuevaCampania(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream editarCampania(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        Vector result = target.editarCampania(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream actualizarSeguimiento1(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        boolean result = target.actualizarSeguimiento1(arg0, arg1, arg2, arg3, arg4, arg5);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream actualizarSeguimiento2(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        boolean result = target.actualizarSeguimiento2(arg0, arg1, arg2, arg3, arg4, arg5);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream nuevoCampaniaDetalle(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        int arg7 = in.read_long();
        double arg8 = in.read_double();
        String arg9 = (String) in.read_value(String.class);
        boolean result = target.nuevoCampaniaDetalle(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream edicionCampaniaDetalle(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        int arg2 = in.read_long();
        double arg3 = in.read_double();
        String arg4 = (String) in.read_value(String.class);
        boolean result = target.edicionCampaniaDetalle(arg0, arg1, arg2, arg3, arg4);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream edicionAccion(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        boolean result = target.edicionAccion(arg0, arg1, arg2, arg3, arg4);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream actualizarMetaGestoresPlanes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector arg0 = (Vector) in.read_value(Vector.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        target.actualizarMetaGestoresPlanes(arg0, arg1, arg2, arg3, arg4, arg5);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream actualizarCargoGestoresLDAP(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector arg0 = (Vector) in.read_value(Vector.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        target.actualizarCargoGestoresLDAP(arg0, arg1, arg2, arg3, arg4, arg5);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream actualizarGestoresDistribuidosLDAP(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        target.actualizarGestoresDistribuidosLDAP(arg0, arg1, arg2, arg3, arg4);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream actualizarGestoresEliminadosLDAP(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector arg0 = (Vector) in.read_value(Vector.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        target.actualizarGestoresEliminadosLDAP(arg0, arg1, arg2, arg3, arg4, arg5);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream reportexUsuario(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        int arg1 = in.read_long();
        int arg2 = in.read_long();
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.reportexUsuario(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream reportexOficina(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        int arg1 = in.read_long();
        int arg2 = in.read_long();
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.reportexOficina(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream reportexTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        int arg1 = in.read_long();
        int arg2 = in.read_long();
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.reportexTerritorio(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream reportexUsuarioxAnio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.reportexUsuarioxAnio(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream listarDiasMesesxAnio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        ArrayList result = target.listarDiasMesesxAnio(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream reportexOficinaxAnio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.reportexOficinaxAnio(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream reportexTerritorioxAnio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.reportexTerritorioxAnio(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream insertarIngresoForm(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        int arg1 = in.read_long();
        int arg2 = in.read_long();
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        target.insertarIngresoForm(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream existeIngresoForm(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        int arg1 = in.read_long();
        int arg2 = in.read_long();
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        long result = target.existeIngresoForm(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        OutputStream out = reply.createReply();
        out.write_longlong(result);
        return out;
    }
    
    private OutputStream actualizarIngresoFormEditUsuario(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        long arg0 = in.read_longlong();
        target.actualizarIngresoFormEditUsuario(arg0);
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream busOficinaxTerritorio__CORBA_WStringValue__boolean(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        boolean arg1 = in.read_boolean();
        Vector result = target.busOficinaxTerritorio(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream exportarTablasTXT(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        int arg1 = in.read_long();
        int arg2 = in.read_long();
        Vector result = target.exportarTablasTXT(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream registrarPermisoPerfil(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        PermisoPerfil arg0 = (PermisoPerfil) in.read_value(PermisoPerfil.class);
        int result = target.registrarPermisoPerfil(arg0);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream listadoIngresoxDia(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        int result = target.listadoIngresoxDia(arg0, arg1);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream nuevaMetaGestor(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        String arg7 = (String) in.read_value(String.class);
        Double arg8 = (Double) in.read_value(Double.class);
        String arg9 = (String) in.read_value(String.class);
        String arg10 = (String) in.read_value(String.class);
        String arg11 = (String) in.read_value(String.class);
        Vector result = target.nuevaMetaGestor(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream nuevaOficina(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        int result = target.nuevaOficina(arg0, arg1, arg2, arg3);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream findCantidadPersonal(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        HashMap result = target.findCantidadPersonal(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,HashMap.class);
        return out;
    }
    
    private OutputStream promedioMensual(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        BigDecimal result = target.promedioMensual(arg0, arg1, arg2, arg3, arg4, arg5);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,BigDecimal.class);
        return out;
    }
    
    private OutputStream consultaSeguimientoAccionEsfuerzo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.consultaSeguimientoAccionEsfuerzo(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream consultaSeguimientoAccionEsfuerzoPGO(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Vector result = target.consultaSeguimientoAccionEsfuerzoPGO(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
}
