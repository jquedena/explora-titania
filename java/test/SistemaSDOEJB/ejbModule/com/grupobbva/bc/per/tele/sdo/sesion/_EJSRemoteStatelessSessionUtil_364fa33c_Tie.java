// Tie class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.grupobbva.bc.per.tele.sdo.sesion;

import java.lang.Object;
import java.lang.String;
import java.lang.Throwable;
import java.rmi.Remote;
import java.util.Date;
import java.util.Vector;
import javax.ejb.EJBHome;
import javax.ejb.EJBObject;
import javax.ejb.Handle;
import javax.ejb.RemoveException;
import javax.rmi.CORBA.Tie;
import javax.rmi.CORBA.Util;
import org.omg.CORBA.BAD_OPERATION;
import org.omg.CORBA.ORB;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.Delegate;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.ResponseHandler;
import org.omg.CORBA.portable.UnknownException;

public class _EJSRemoteStatelessSessionUtil_364fa33c_Tie extends org.omg.CORBA_2_3.portable.ObjectImpl implements Tie {
    
    private EJSRemoteStatelessSessionUtil_364fa33c target = null;
    private ORB orb = null;
    
    private static final String[] _type_ids = {
        "RMI:com.grupobbva.bc.per.tele.sdo.sesion.SessionUtil:0000000000000000", 
        "RMI:javax.ejb.EJBObject:0000000000000000", 
        "RMI:com.ibm.websphere.csi.CSIServant:0000000000000000", 
        "RMI:com.ibm.websphere.csi.TransactionalObject:0000000000000000"
    };
    
    public void setTarget(Remote target) {
        this.target = (EJSRemoteStatelessSessionUtil_364fa33c) target;
    }
    
    public Remote getTarget() {
        return target;
    }
    
    public org.omg.CORBA.Object thisObject() {
        return this;
    }
    
    public void deactivate() {
        if (orb != null) {
            orb.disconnect(this);
            _set_delegate(null);
        }
    }
    
    public ORB orb() {
        return _orb();
    }
    
    public void orb(ORB orb) {
        orb.connect(this);
    }
    
    public void _set_delegate(Delegate del) {
        super._set_delegate(del);
        if (del != null)
            orb = _orb();
        else
            orb = null;
    }
    
    public String[] _ids() { 
        return _type_ids;
    }
    
    public OutputStream _invoke(String method, InputStream _in, ResponseHandler reply) throws SystemException {
        try {
            org.omg.CORBA_2_3.portable.InputStream in = 
                (org.omg.CORBA_2_3.portable.InputStream) _in;
            switch (method.hashCode()) {
                case -2140698252: 
                    if (method.equals("xInsertarTMaestroPlanes")) {
                        return xInsertarTMaestroPlanes(in, reply);
                    }
                case -2128148660: 
                    if (method.equals("xInsertarTParametros")) {
                        return xInsertarTParametros(in, reply);
                    }
                case -2123926735: 
                    if (method.equals("xBusAllTablaEquivalencias")) {
                        return xBusAllTablaEquivalencias(in, reply);
                    }
                case -1757200794: 
                    if (method.equals("buscarEstadoFlag")) {
                        return buscarEstadoFlag(in, reply);
                    }
                case -1719645701: 
                    if (method.equals("consultarPLanesAccion")) {
                        return consultarPLanesAccion(in, reply);
                    }
                case -1671816121: 
                    if (method.equals("xInsertarTAcciones")) {
                        return xInsertarTAcciones(in, reply);
                    }
                case -1635720411: 
                    if (method.equals("xBusAllTablaOficinaAntiguo")) {
                        return xBusAllTablaOficinaAntiguo(in, reply);
                    }
                case -1550521068: 
                    if (method.equals("_get_EJBHome")) {
                        return _get_EJBHome(in, reply);
                    }
                case -1405184949: 
                    if (method.equals("xBusAllTablaPerfiles")) {
                        return xBusAllTablaPerfiles(in, reply);
                    }
                case -1323710836: 
                    if (method.equals("consultarCampaniasDetalles")) {
                        return consultarCampaniasDetalles(in, reply);
                    }
                case -1276135182: 
                    if (method.equals("xDameTerritorio")) {
                        return xDameTerritorio(in, reply);
                    }
                case -1249746334: 
                    if (method.equals("exportarTablasTXT")) {
                        return exportarTablasTXT(in, reply);
                    }
                case -1175136058: 
                    if (method.equals("testearBD")) {
                        return testearBD(in, reply);
                    }
                case -1064664470: 
                    if (method.equals("xInsertarTEpigrafes")) {
                        return xInsertarTEpigrafes(in, reply);
                    }
                case -1011244123: 
                    if (method.equals("_get_primaryKey")) {
                        return _get_primaryKey(in, reply);
                    }
                case -934610812: 
                    if (method.equals("remove")) {
                        return remove(in, reply);
                    }
                case -862570082: 
                    if (method.equals("consultarPlanesAccionesPPG")) {
                        return consultarPlanesAccionesPPG(in, reply);
                    }
                case -778537116: 
                    if (method.equals("xBusAllTablaCampanhasAntiguo")) {
                        return xBusAllTablaCampanhasAntiguo(in, reply);
                    }
                case -545339166: 
                    if (method.equals("xInsertarTFirmas")) {
                        return xInsertarTFirmas(in, reply);
                    }
                case -422535847: 
                    if (method.equals("xInsertarTOficina")) {
                        return xInsertarTOficina(in, reply);
                    }
                case -400845858: 
                    if (method.equals("xInsertarTMetasGestor")) {
                        return xInsertarTMetasGestor(in, reply);
                    }
                case -282880651: 
                    if (method.equals("xBusAllTablaMaestroPlanes")) {
                        return xBusAllTablaMaestroPlanes(in, reply);
                    }
                case -256782455: 
                    if (method.equals("xInsertarTPlanes")) {
                        return xInsertarTPlanes(in, reply);
                    }
                case -99916896: 
                    if (method.equals("buscarUsuariosLDAP")) {
                        return buscarUsuariosLDAP(in, reply);
                    }
                case -77006823: 
                    if (method.equals("xBusAllTablaAccionesAntiguo")) {
                        return xBusAllTablaAccionesAntiguo(in, reply);
                    }
                case 115793018: 
                    if (method.equals("consultaSeguimientoAccionEsfuerzo")) {
                        return consultaSeguimientoAccionEsfuerzo(in, reply);
                    }
                case 313222960: 
                    if (method.equals("xInsertarTEquivalencias")) {
                        return xInsertarTEquivalencias(in, reply);
                    }
                case 330502621: 
                    if (method.equals("xInsertarTCampanhasDetalle")) {
                        return xInsertarTCampanhasDetalle(in, reply);
                    }
                case 547761815: 
                    if (method.equals("xInsertarTTerritorio")) {
                        return xInsertarTTerritorio(in, reply);
                    }
                case 632146945: 
                    if (method.equals("xBusAllTablaFirmas")) {
                        return xBusAllTablaFirmas(in, reply);
                    }
                case 731139710: 
                    if (method.equals("consultaSeguimientoAccionEsfuerzoPGO")) {
                        return consultaSeguimientoAccionEsfuerzoPGO(in, reply);
                    }
                case 902028524: 
                    if (method.equals("xInsertarTPerfiles")) {
                        return xInsertarTPerfiles(in, reply);
                    }
                case 920703656: 
                    if (method.equals("xBusAllTablaPlanes")) {
                        return xBusAllTablaPlanes(in, reply);
                    }
                case 1058914185: 
                    if (method.equals("xBusAllTablaTerritorioAntiguo")) {
                        return xBusAllTablaTerritorioAntiguo(in, reply);
                    }
                case 1066196262: 
                    if (method.equals("getCorrelativo")) {
                        return getCorrelativo(in, reply);
                    }
                case 1074486467: 
                    if (method.equals("xBusAllTablaCampanhasDetalleAntiguo")) {
                        return xBusAllTablaCampanhasDetalleAntiguo(in, reply);
                    }
                case 1137795819: 
                    if (method.equals("xBusAllTablaParametros")) {
                        return xBusAllTablaParametros(in, reply);
                    }
                case 1244843316: 
                    if (method.equals("xBusAllTablaEpigrafesAntiguo")) {
                        return xBusAllTablaEpigrafesAntiguo(in, reply);
                    }
                case 1264756395: 
                    if (method.equals("isIdentical")) {
                        return isIdentical(in, reply);
                    }
                case 1510866575: 
                    if (method.equals("findAllOficinaConMetas")) {
                        return findAllOficinaConMetas(in, reply);
                    }
                case 1675292218: 
                    if (method.equals("xInsertarTCampanhas")) {
                        return xInsertarTCampanhas(in, reply);
                    }
                case 1695108546: 
                    if (method.equals("actualizarEstadoFlag")) {
                        return actualizarEstadoFlag(in, reply);
                    }
                case 1720275748: 
                    if (method.equals("consultarCampaniasDetallesPGG")) {
                        return consultarCampaniasDetallesPGG(in, reply);
                    }
                case 1944413392: 
                    if (method.equals("_get_handle")) {
                        return _get_handle(in, reply);
                    }
                case 2059185183: 
                    if (method.equals("xBusAllTablaMetasGestor")) {
                        return xBusAllTablaMetasGestor(in, reply);
                    }
            }
            throw new BAD_OPERATION();
        } catch (SystemException ex) {
            throw ex;
        } catch (Throwable ex) {
            throw new UnknownException(ex);
        }
    }
    
    private OutputStream _get_EJBHome(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        EJBHome result = target.getEJBHome();
        OutputStream out = reply.createReply();
        Util.writeRemoteObject(out,result);
        return out;
    }
    
    private OutputStream _get_primaryKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Object result = target.getPrimaryKey();
        OutputStream out = reply.createReply();
        Util.writeAny(out,result);
        return out;
    }
    
    private OutputStream remove(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        try {
            target.remove();
        } catch (RemoveException ex) {
            String id = "IDL:javax/ejb/RemoveEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,RemoveException.class);
            return out;
        }
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_handle(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Handle result = target.getHandle();
        OutputStream out = reply.createReply();
        Util.writeAbstractObject(out,result);
        return out;
    }
    
    private OutputStream isIdentical(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        EJBObject arg0 = (EJBObject) in.read_Object(EJBObject.class);
        boolean result = target.isIdentical(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream getCorrelativo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String result = target.getCorrelativo(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream consultarPLanesAccion(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.consultarPLanesAccion(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream consultarCampaniasDetalles(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.consultarCampaniasDetalles(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream consultarPlanesAccionesPPG(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.consultarPlanesAccionesPPG(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream consultarCampaniasDetallesPGG(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.consultarCampaniasDetallesPGG(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream findAllOficinaConMetas(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Vector result = target.findAllOficinaConMetas(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xInsertarTPlanes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        int arg5 = in.read_long();
        int arg6 = in.read_long();
        int arg7 = in.read_long();
        int arg8 = in.read_long();
        int arg9 = in.read_long();
        int arg10 = in.read_long();
        int arg11 = in.read_long();
        int arg12 = in.read_long();
        int arg13 = in.read_long();
        int arg14 = in.read_long();
        int arg15 = in.read_long();
        int arg16 = in.read_long();
        String arg17 = (String) in.read_value(String.class);
        int arg18 = in.read_long();
        int arg19 = in.read_long();
        int arg20 = in.read_long();
        int arg21 = in.read_long();
        int arg22 = in.read_long();
        int arg23 = in.read_long();
        String arg24 = (String) in.read_value(String.class);
        String arg25 = (String) in.read_value(String.class);
        int arg26 = in.read_long();
        int arg27 = in.read_long();
        int arg28 = in.read_long();
        int arg29 = in.read_long();
        int arg30 = in.read_long();
        int result = target.xInsertarTPlanes(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xInsertarTParametros(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Date arg0 = (Date) in.read_value(Date.class);
        Date arg1 = (Date) in.read_value(Date.class);
        Date arg2 = (Date) in.read_value(Date.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        Date arg6 = (Date) in.read_value(Date.class);
        int result = target.xInsertarTParametros(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaParametros(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.xBusAllTablaParametros();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xInsertarTMetasGestor(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        Date arg7 = (Date) in.read_value(Date.class);
        String arg8 = (String) in.read_value(String.class);
        String arg9 = (String) in.read_value(String.class);
        String arg10 = (String) in.read_value(String.class);
        String arg11 = (String) in.read_value(String.class);
        int result = target.xInsertarTMetasGestor(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaMetasGestor(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.xBusAllTablaMetasGestor(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xInsertarTMaestroPlanes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        Date arg5 = (Date) in.read_value(Date.class);
        int result = target.xInsertarTMaestroPlanes(arg0, arg1, arg2, arg3, arg4, arg5);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaMaestroPlanes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.xBusAllTablaMaestroPlanes(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xInsertarTFirmas(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        Date arg6 = (Date) in.read_value(Date.class);
        int result = target.xInsertarTFirmas(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaFirmas(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.xBusAllTablaFirmas();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xInsertarTPerfiles(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        int result = target.xInsertarTPerfiles(arg0, arg1);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaPerfiles(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.xBusAllTablaPerfiles();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xInsertarTEquivalencias(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        int result = target.xInsertarTEquivalencias(arg0, arg1);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaEquivalencias(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.xBusAllTablaEquivalencias();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xInsertarTCampanhasDetalle(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        int arg5 = in.read_long();
        int arg6 = in.read_long();
        int arg7 = in.read_long();
        int arg8 = in.read_long();
        int arg9 = in.read_long();
        int arg10 = in.read_long();
        int arg11 = in.read_long();
        int arg12 = in.read_long();
        String arg13 = (String) in.read_value(String.class);
        String arg14 = (String) in.read_value(String.class);
        Date arg15 = (Date) in.read_value(Date.class);
        Date arg16 = (Date) in.read_value(Date.class);
        Date arg17 = (Date) in.read_value(Date.class);
        String arg18 = (String) in.read_value(String.class);
        int result = target.xInsertarTCampanhasDetalle(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaCampanhasDetalleAntiguo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.xBusAllTablaCampanhasDetalleAntiguo();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xInsertarTCampanhas(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        String arg7 = (String) in.read_value(String.class);
        Date arg8 = (Date) in.read_value(Date.class);
        String arg9 = (String) in.read_value(String.class);
        int result = target.xInsertarTCampanhas(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xInsertarTOficina(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        int result = target.xInsertarTOficina(arg0, arg1, arg2);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaOficinaAntiguo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.xBusAllTablaOficinaAntiguo();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xInsertarTTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        int result = target.xInsertarTTerritorio(arg0, arg1);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xInsertarTEpigrafes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        String arg7 = (String) in.read_value(String.class);
        String arg8 = (String) in.read_value(String.class);
        String arg9 = (String) in.read_value(String.class);
        int result = target.xInsertarTEpigrafes(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xInsertarTAcciones(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        int arg5 = in.read_long();
        int arg6 = in.read_long();
        int arg7 = in.read_long();
        int arg8 = in.read_long();
        int arg9 = in.read_long();
        int arg10 = in.read_long();
        int arg11 = in.read_long();
        int arg12 = in.read_long();
        String arg13 = (String) in.read_value(String.class);
        String arg14 = (String) in.read_value(String.class);
        Date arg15 = (Date) in.read_value(Date.class);
        Date arg16 = (Date) in.read_value(Date.class);
        Date arg17 = (Date) in.read_value(Date.class);
        String arg18 = (String) in.read_value(String.class);
        int result = target.xInsertarTAcciones(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xDameTerritorio(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String result = target.xDameTerritorio(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream xBusAllTablaTerritorioAntiguo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.xBusAllTablaTerritorioAntiguo();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xBusAllTablaEpigrafesAntiguo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Vector result = target.xBusAllTablaEpigrafesAntiguo();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream buscarEstadoFlag(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.buscarEstadoFlag();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream actualizarEstadoFlag(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        int result = target.actualizarEstadoFlag(arg0);
        OutputStream out = reply.createReply();
        out.write_long(result);
        return out;
    }
    
    private OutputStream xBusAllTablaAccionesAntiguo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.xBusAllTablaAccionesAntiguo(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xBusAllTablaPlanes(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        Vector result = target.xBusAllTablaPlanes(arg0, arg1);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream xBusAllTablaCampanhasAntiguo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        Vector result = target.xBusAllTablaCampanhasAntiguo(arg0);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream buscarUsuariosLDAP(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        int arg2 = in.read_long();
        Vector result = target.buscarUsuariosLDAP(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream testearBD(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.testearBD();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream exportarTablasTXT(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        int arg0 = in.read_long();
        int arg1 = in.read_long();
        int arg2 = in.read_long();
        Vector result = target.exportarTablasTXT(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream consultaSeguimientoAccionEsfuerzo(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Vector result = target.consultaSeguimientoAccionEsfuerzo(arg0, arg1, arg2, arg3);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
    
    private OutputStream consultaSeguimientoAccionEsfuerzoPGO(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        Vector result = target.consultaSeguimientoAccionEsfuerzoPGO(arg0, arg1, arg2);
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,Vector.class);
        return out;
    }
}
