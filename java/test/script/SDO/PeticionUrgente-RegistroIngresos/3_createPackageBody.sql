CREATE OR REPLACE PACKAGE BODY IIDO.PKG_INGRESO IS
  PROCEDURE PROC_INSERTAR_INGRESO(P_COD_USUARIO IN VARCHAR2, P_CARGO IN VARCHAR2, P_TERRITORIO IN VARCHAR2, P_OFICINA IN VARCHAR2, P_USUARIO IN VARCHAR2, P_ID OUT NUMBER)
  AS
  BEGIN
    SELECT (NVL(MAX(ID_INGRESOS), 0) + 1) INTO P_ID FROM IIDO.TIIDO_INGRESOS;
    
    INSERT INTO IIDO.TIIDO_INGRESOS (ID_INGRESOS, VECES, VALIDO_VECES, COD_USUARIO, CARGO, NOM_TERRITORIO, COD_OFICINA, NOMBRES)
    VALUES (P_ID, '1', '1', P_COD_USUARIO, P_CARGO, P_TERRITORIO, P_OFICINA, P_USUARIO);
    COMMIT;
  EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    P_ID := -1;   
    dbms_output.put_line(dbms_utility.format_error_backtrace);
    dbms_output.put_line(SQLERRM);
  END PROC_INSERTAR_INGRESO;
  
  PROCEDURE PROC_INSERTAR_INGRESO_DETALLE(P_ID IN NUMBER, P_TIPO IN NUMBER, P_MES IN VARCHAR2, P_ANIO IN VARCHAR2)
  AS
    P_ROW NUMBER;
  	P_COLUMN VARCHAR2(20) := '';
    P_QUERY VARCHAR2(300) := '';
  BEGIN
    SELECT (NVL(MAX(ID), 0) + 1), DECODE(P_TIPO
          , 1, 'OBJETIVOS'
          , 2, 'ACCIONES'
          , 3, 'SEG1'
          , 4, 'SEG2'
          , 5, 'PLANES'
          , '' ) INTO P_ROW, P_COLUMN FROM IIDO.TIIDO_INGRESOS_DETALLE;
    
		P_QUERY := 'INSERT INTO IIDO.TIIDO_INGRESOS_DETALLE (ID, MES, ANIO, ' || P_COLUMN || ', ID_INGRESOS) VALUES(:P_ROW, :P_MES, :P_ANIO, 1, :P_ID)';
    
    IF (LENGTH(P_COLUMN) > 0) THEN
      EXECUTE IMMEDIATE P_QUERY USING P_ROW, P_MES, P_ANIO, P_ID;
    END IF;
  
    COMMIT;
  EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;    
    dbms_output.put_line(dbms_utility.format_error_backtrace);
    dbms_output.put_line(SQLERRM);
  END PROC_INSERTAR_INGRESO_DETALLE;
  
  PROCEDURE PROC_INSERTAR_INGRESO_FORM(P_TIPO IN VARCHAR2, P_MES IN VARCHAR2, P_ANIO IN VARCHAR2, P_COD_USUARIO IN VARCHAR2, P_MODO IN VARCHAR2, P_COD_GESTOR IN VARCHAR2, P_COD_OFICINA IN VARCHAR2)
  AS
  	P_ROW NUMBER;
  BEGIN
    SELECT NVL(MAX(FORM_ID) + 1, 1) INTO P_ROW FROM IIDO.TIIDO_INGRESOS_FORM;
    INSERT INTO IIDO.TIIDO_INGRESOS_FORM (FORM_ID, TIPO_FORM,  MES, ANIO, COD_USUARIO, EDIT_USUARIO, COD_GESTOR_M, COD_OFICINA_M)
    VALUES(P_ROW, P_TIPO, P_MES, P_ANIO, P_COD_USUARIO, P_MODO, P_COD_GESTOR, P_COD_OFICINA);
    COMMIT;
  EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    dbms_output.put_line(dbms_utility.format_error_backtrace);
    dbms_output.put_line(SQLERRM);
  END PROC_INSERTAR_INGRESO_FORM;

  PROCEDURE PROC_EXISTE_INGRESO_FORM(P_TIPO IN VARCHAR2, P_MES IN VARCHAR2, P_ANIO IN VARCHAR2, P_COD_USUARIO IN VARCHAR2, P_COD_GESTOR IN VARCHAR2, P_COD_OFICINA IN VARCHAR2, P_ID OUT NUMBER)
  AS
  BEGIN
    SELECT FORM_ID INTO P_ID FROM IIDO.TIIDO_INGRESOS_FORM 
    WHERE TIPO_FORM = P_TIPO AND
      TO_CHAR(FECHA_ACT, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD') AND
      COD_USUARIO = P_COD_USUARIO AND
      COD_GESTOR_M = P_COD_GESTOR AND
      COD_OFICINA_M = P_COD_OFICINA AND
      MES = P_MES AND 
      ANIO = P_ANIO;
  EXCEPTION
  WHEN OTHERS THEN
    dbms_output.put_line(dbms_utility.format_error_backtrace);
    dbms_output.put_line(SQLERRM);
  END PROC_EXISTE_INGRESO_FORM;
  
  PROCEDURE PROC_ACTUALIZAR_INGRESO_FORM(P_ID IN NUMBER)
  AS
  BEGIN
    UPDATE IIDO.TIIDO_INGRESOS_FORM SET EDIT_USUARIO = '1' WHERE FORM_ID = P_ID;
    COMMIT;
  EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    dbms_output.put_line(dbms_utility.format_error_backtrace);
    dbms_output.put_line(SQLERRM);
  END PROC_ACTUALIZAR_INGRESO_FORM;
END PKG_INGRESO;
/