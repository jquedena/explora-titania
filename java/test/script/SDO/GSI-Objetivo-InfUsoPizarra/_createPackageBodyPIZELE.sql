spool 2_createPackageBody.log
CREATE OR REPLACE PACKAGE BODY PK_RUBRO_LOGRO IS

	PROCEDURE PROC_LIST_RUBRO_LOGRO(
		PI_COD_TERR IN RUBRO_LOGRO.COD_TERR%TYPE,
		PI_COD_OFIC IN RUBRO_LOGRO.COD_OFIC%TYPE,
		PI_DIA IN RUBRO_LOGRO.DIA%TYPE,
		PI_MES IN RUBRO_LOGRO.MES%TYPE,
		PI_ANIO IN RUBRO_LOGRO.ANIO%TYPE,
		RUBRO_LOGRO_CUR_REF OUT SYS_REFCURSOR )
	IS
	BEGIN
		OPEN RUBRO_LOGRO_CUR_REF FOR
		SELECT ID,
			ID_RUBRO,
			COD_TERR,
			COD_OFIC,
			DIA,
			SEMANA,
			MES,
			ANIO,
			COD_GESTOR,
			NOM_GES_SUP,
			APELL_PAT_GES_SUP,
			APELL_MAT_GES_SUP,
			COD_CARGO,
			LOGRO
		FROM IIDO.RUBRO_LOGRO
		WHERE COD_TERR = PI_COD_TERR
			AND COD_OFIC = PI_COD_OFIC
			AND DIA = PI_DIA
			AND MES = PI_MES
			AND ANIO = PI_ANIO;

	END PROC_LIST_RUBRO_LOGRO;

	PROCEDURE PROC_INSERT_RUBRO_LOGRO(
		PI_ID_RUBRO IN RUBRO_LOGRO.ID_RUBRO%TYPE,
		PI_COD_TERR IN RUBRO_LOGRO.COD_TERR%TYPE,
		PI_COD_OFIC IN RUBRO_LOGRO.COD_OFIC%TYPE,
		PI_DIA IN RUBRO_LOGRO.DIA%TYPE,
		PI_SEMANA IN RUBRO_LOGRO.SEMANA%TYPE,
		PI_MES IN RUBRO_LOGRO.MES%TYPE,
		PI_ANIO IN RUBRO_LOGRO.ANIO%TYPE,
		PI_COD_GESTOR IN RUBRO_LOGRO.COD_GESTOR%TYPE,
		PI_NOM_GES_SUP IN RUBRO_LOGRO.NOM_GES_SUP%TYPE,
		PI_APELL_PAT_GES_SUP IN RUBRO_LOGRO.APELL_PAT_GES_SUP%TYPE,
		PI_APELL_MAT_GES_SUP IN RUBRO_LOGRO.APELL_MAT_GES_SUP%TYPE,
		PI_COD_CARGO IN RUBRO_LOGRO.COD_CARGO%TYPE,
		PI_LOGRO IN RUBRO_LOGRO.LOGRO%TYPE,
		PI_USU_REGI IN RUBRO_LOGRO.USU_REGI%TYPE,
		PI_ID OUT RUBRO_LOGRO.ID%TYPE )
	AS
    CTA NUMBER := 0;
	BEGIN

    SELECT COUNT(1) INTO CTA FROM IIDO.RUBRO_LOGRO WHERE ID_RUBRO = PI_ID_RUBRO
			AND COD_TERR = PI_COD_TERR
			AND COD_OFIC = PI_COD_OFIC
			AND DIA = PI_DIA
			AND SEMANA = PI_SEMANA
			AND MES = PI_MES
			AND ANIO = PI_ANIO
			AND COD_GESTOR = PI_COD_GESTOR;

    IF CTA = 0 THEN
      SELECT IIDO.SEQ_RUBRO_LOGRO.NEXTVAL INTO PI_ID FROM DUAL;

      INSERT INTO IIDO.RUBRO_LOGRO (
        ID,
        ID_RUBRO,
        COD_TERR,
        COD_OFIC,
        DIA,
        SEMANA,
        MES,
        ANIO,
        COD_GESTOR,
        NOM_GES_SUP,
        APELL_PAT_GES_SUP,
        APELL_MAT_GES_SUP,
        COD_CARGO,
        LOGRO,
        USU_REGI,
        FEC_REGI )
      VALUES (
        PI_ID,
        PI_ID_RUBRO,
        PI_COD_TERR,
        PI_COD_OFIC,
        PI_DIA,
        PI_SEMANA,
        PI_MES,
        PI_ANIO,
        PI_COD_GESTOR,
        PI_NOM_GES_SUP,
        PI_APELL_PAT_GES_SUP,
        PI_APELL_MAT_GES_SUP,
        NVL(PI_COD_CARGO, '---'),
        PI_LOGRO,
        PI_USU_REGI,
        SYSDATE );
	ELSE
    UPDATE IIDO.RUBRO_LOGRO SET
        LOGRO = PI_LOGRO,
        USU_ACTU = PI_USU_REGI,
        FEC_ACTU = SYSDATE
    WHERE ID_RUBRO = PI_ID_RUBRO
			AND COD_TERR = PI_COD_TERR
			AND COD_OFIC = PI_COD_OFIC
			AND DIA = PI_DIA
			AND SEMANA = PI_SEMANA
			AND MES = PI_MES
			AND ANIO = PI_ANIO
			AND COD_GESTOR = PI_COD_GESTOR;
  END IF;
	END PROC_INSERT_RUBRO_LOGRO;

	PROCEDURE PROC_DELETE_RUBRO_LOGRO(
		PI_ID IN RUBRO_LOGRO.ID%TYPE,
		PI_COD_USU IN RUBRO_LOGRO.USU_ACTU%TYPE)
	AS
	BEGIN
		UPDATE IIDO.RUBRO_LOGRO SET USU_ACTU = PI_COD_USU, FEC_ACTU = SYSDATE
		WHERE ID = PI_ID;

		DELETE FROM IIDO.RUBRO_LOGRO WHERE ID = PI_ID;
	END PROC_DELETE_RUBRO_LOGRO;

END PK_RUBRO_LOGRO;
/
spool off